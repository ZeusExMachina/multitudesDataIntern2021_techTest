{"ggplot2": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDQ3MDY3Nw==", "comment_author": "hadley", "comment_created_date": "2020-10-15T13:54:25Z", "comment_text": "Looks fantastic overall - if you wouldn't mind fixing the small niggles I pointed out, I'd be happy to accept the commit."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ3MDcwMQ==", "comment_author": "kohske", "comment_created_date": "2020-10-15T14:04:22Z", "comment_text": "Thanks, please fix them.\nand as for coding style, okey, I will follow you guidelines.\nI want to know your developing environment.\nI'm using ESS and emacs, but indent style cannot match your guideline...\nProbably customizing ESS will make this better, but it is easy for me if I know your developing environment.\nthanks, anyway. it's my great pleasure."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ3MjI5NQ==", "comment_author": "kohske", "comment_created_date": "2020-10-16T01:42:50Z", "comment_text": "Now I realized that I misunderstood your comment. Ok, I will fix them by myself in a few days. Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDUwNTExNg==", "comment_author": "hadley", "comment_created_date": "2020-10-30T23:52:49Z", "comment_text": "All looks good - just need some free time to give it a thorough testing.  Hopefully in the next couple of weeks.  Thanks again for all the help!"}], "lubridate": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDI0MTA2ODI=", "comment_author": "kenahoo", "comment_created_date": "2020-10-14T19:50:39Z", "comment_text": "I added another change, this time some clarifications to the docs.  Any chance these will be picked up soon?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI0MTA2ODc=", "comment_author": "kenahoo", "comment_created_date": "2020-10-14T19:51:08Z", "comment_text": "Oops, didn't mean to close the request."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NDE3MzQz", "comment_author": "garrettgman", "comment_created_date": "2020-10-01T00:17:30Z", "comment_text": "Thank you peytonm and vitalie"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE0NjY3NDMzOQ==", "comment_author": "vspinu", "comment_created_date": "2020-10-08T20:18:15Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NTE0NDM3MQ==", "comment_author": "ctbrown", "comment_created_date": "2020-10-20T15:43:30Z", "comment_text": "Yes. No problem.  Look for an update later today.\nC-\nOn Wed, Oct 19, 2016 at 1:05 PM, Vitalie Spinu notifications@github.com\nwrote:\n\n@vspinu commented on this pull request.\nIn R/ops-addition.r #484:\n\n@@ -16,8 +16,16 @@ add_duration_to_date <- function(dur, date) {\nif(is.Date(date)){\ndate <- as.POSIXct(date)\nans <- with_tz(date + dur@.Data, \"UTC\")\n\nif (hour(ans) == 0 && minute(ans) == 0 && second(ans) == 0)\n\n\n\n\n\nif ( all(is.na(ans) ) ) return(as.Date(ans))  # ALL NAs\n\n\n\n\n\nif ( all( hour(na.omit(ans)) == 0 ) &&\n\n\nCould you also add a changelog entry for this? Thanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#484, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AC5xa9nWLHsXvGvLVf9p0n3QcML1B2kdks5q1ngEgaJpZM4Ka3ld\n."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NjEyODk4MQ==", "comment_author": "ctbrown", "comment_created_date": "2020-10-25T18:31:02Z", "comment_text": "Took longer than expected, but your pull request fixing #483 has been\ncompleted and should be passing all tests.\nOn Thu, Oct 20, 2016 at 8:42 AM, Christopher Brown <\ncbrown@decisionpatterns.com> wrote:\n\nYes. No problem.  Look for an update later today.\nC-\nOn Wed, Oct 19, 2016 at 1:05 PM, Vitalie Spinu notifications@github.com\nwrote:\n\n@vspinu commented on this pull request.\nIn R/ops-addition.r #484:\n\n@@ -16,8 +16,16 @@ add_duration_to_date <- function(dur, date) {\nif(is.Date(date)){\ndate <- as.POSIXct(date)\nans <- with_tz(date + dur@.Data, \"UTC\")\n\nif (hour(ans) == 0 && minute(ans) == 0 && second(ans) == 0)\n\n\n\n\n\nif ( all(is.na(ans) ) ) return(as.Date(ans))  # ALL NAs\n\n\n\n\n\nif ( all( hour(na.omit(ans)) == 0 ) &&\n\n\nCould you also add a changelog entry for this? Thanks.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#484, or mute the thread\nhttps://github.com/notifications/unsubscribe-auth/AC5xa9nWLHsXvGvLVf9p0n3QcML1B2kdks5q1ngEgaJpZM4Ka3ld\n."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NjE1NDA3OQ==", "comment_author": "vspinu", "comment_created_date": "2020-10-25T19:42:47Z", "comment_text": "Thanks. This branch created a rather messy history and you have a small conflicts. Would you care to squash and rebase? I can do it for you later in the week if you don't have time for this."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NjE4ODU1NA==", "comment_author": "ctbrown", "comment_created_date": "2020-10-25T21:56:21Z", "comment_text": "No problem.  Probably caused by commits coming in. Will probably provide a\nnew PR.\nOn Tue, Oct 25, 2016 at 12:42 PM, Vitalie Spinu notifications@github.com\nwrote:\n\nThanks. This branch created a rather messy history and you have a small\nconflicts. Would you care to squash and rebase? I can do it for you later\nin the week if you don't have time for this.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#484 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AC5xa-lGEN4Bn0K3dIfo_DJkHhBYpbxWks5q3lu4gaJpZM4Ka3ld\n."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NjIwOTEyNg==", "comment_author": "vspinu", "comment_created_date": "2020-10-25T23:32:07Z", "comment_text": "Will probably provide a new PR.\n\nYou can simply push with -force on this branch."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NTUzMTk1OA==", "comment_author": "vspinu", "comment_created_date": "2020-10-22T14:35:40Z", "comment_text": "Looks good. Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NTc4OTI3NA==", "comment_author": "cderv", "comment_created_date": "2020-10-24T16:19:41Z", "comment_text": "I added some tests for round_date and floor_date using just some units not all possibilities."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NjcwNjE5NQ==", "comment_author": "vspinu", "comment_created_date": "2020-10-27T17:00:23Z", "comment_text": "Thank you!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzM4MDEyNA==", "comment_author": "vspinu", "comment_created_date": "2020-10-01T14:25:07Z", "comment_text": "Thanks! \ud83d\udc4d"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDc0MjU3Mw==", "comment_author": "vspinu", "comment_created_date": "2020-10-06T12:37:06Z", "comment_text": "Ok, so in a nutshell: It's not about Rscript as such. It's simply that when package A has Depends on package B,and package C ImportsA, then when package C is loaded, it loads A, but theDependsof A, package B is not actually attached.  In our case package C ismethods`.\n\nI've punted on the first issue (I found initialize and coerce<- by tedious experimentation),\n\nSo I guess, no concrete ideas of how to improve on this?\n\nbut tried to improve the second one;\n\nOk, it is good enough. I had something similar before, but removed it for no-idea-why reason at some later stage. Could you push it for CRAN check (aka devtools::build_win)? You can leave my email for feedback, I will post it here.\nThanks a bunch for this! Will merge this later today. Could you please add a NEWS entry for this (in bug fixes) and squash all commits in one?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDgwNTU5Ng==", "comment_author": "vspinu", "comment_created_date": "2020-10-06T16:32:20Z", "comment_text": "It fails on win-builder https://win-builder.r-project.org/INqPlIrky8xB/00check.log\nI recall that last time I wasn't running system checks on CRAN. There is a testhat variable somewhere to inhibit specific tests on CRAN. It's good enough if we could run it on Travis."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDgxNDI5MQ==", "comment_author": "infotroph", "comment_created_date": "2020-10-06T17:07:09Z", "comment_text": "Looks like the key line is in test.that.Rout: \"Fatal error: cannot open file 'R_TESTS=': No such file or directory\". I forgot that environment variables and Windows don't go together.\n\nIt's good enough if we could run it on Travis.\n\nWant me to add skip_on_cran()?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDg0NzM3MQ==", "comment_author": "infotroph", "comment_created_date": "2020-10-06T19:23:17Z", "comment_text": "Added NEWS entry and skipped tests on CRAN, squashed all commits together."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDg0Nzk2OQ==", "comment_author": "infotroph", "comment_created_date": "2020-10-06T19:25:58Z", "comment_text": "I've punted on the first issue (I found initialize and coerce<- by tedious experimentation),\n\n\n\nSo I guess, no concrete ideas of how to improve on this?\n\nNo good ideas, no -- I know next to nothing about S4. Unless a wholesale @import methods is a workable solution, but I assume if it were that simple you would have done it long ago."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDk5OTk1NQ==", "comment_author": "vspinu", "comment_created_date": "2020-10-08T11:24:22Z", "comment_text": "Thanks \ud83d\udc4d"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNTAwMTYyOQ==", "comment_author": "vspinu", "comment_created_date": "2020-10-08T11:56:48Z", "comment_text": "Well, this actually fails locally for me. If it does for me, it will fail for other users. We would need something a bit more robust I guess.\nchecking tests ... ERROR\n  Running \u2018testthat.R\u2019\nRunning the tests in \u2018tests/testthat.R\u2019 failed.\nLast 13 lines of output:\n  do_Rscript(\"lubridate::dhours(22)\") does not match \"79200s (~22 hours)\".\n  Actual values:\n  * WARNING: ignoring environment value of R_HOME\n  * [1] \"79200s (~22 hours)\"\n  \n  \n  testthat results ================================================================\n  OK: 2367 SKIPPED: 0 FAILED: 4\n  1. Failure: methods is not attached (@test-namespace.R#32) \n  2. Failure: lubridate:: calls work when methods is not attached (@test-namespace.R#39) \n  3. Failure: lubridate:: calls work when methods is not attached (@test-namespace.R#44) \n  4. Failure: lubridate:: calls work when methods is not attached (@test-namespace.R#48) \n  \n  Error: testthat unit tests failed\n  Execution halted\n> \n\n1. Failure: methods is not attached (@test-namespace.R#32) ---------------------\ndo_Rscript(\"'package:methods' %in% search()\") does not match \"FALSE\".\nActual values:\n* WARNING: ignoring environment value of R_HOME\n* [1] FALSE\n\n\n2. Failure: lubridate:: calls work when methods is not attached (@test-namespace.R#39) \ndo_Rscript(\"lubridate::round_date(as.POSIXct('2017-10-03 03:01:13Z'), 'minute')\") does not match \"2017-10-03 03:01:00\".\nActual values:\n* WARNING: ignoring environment value of R_HOME\n* [1] \"2017-10-03 03:01:00 CEST\"\n\n\n3. Failure: lubridate:: calls work when methods is not attached (@test-namespace.R#44) \ndo_Rscript(\"lubridate::days(1)\") does not match \"1d 0H 0M 0S\".\nActual values:\n* WARNING: ignoring environment value of R_HOME\n* [1] \"1d 0H 0M 0S\"\n\n\n4. Failure: lubridate:: calls work when methods is not attached (@test-namespace.R#48) \ndo_Rscript(\"lubridate::dhours(22)\") does not match \"79200s (~22 hours)\".\nActual values:\n* WARNING: ignoring environment value of R_HOME\n* [1] \"79200s (~22 hours)\""}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNTAwMTgwMA==", "comment_author": "vspinu", "comment_created_date": "2020-10-08T12:00:10Z", "comment_text": "Also when trying it directly\n+ . + Warning: running command ''R' CMD install --library=/tmp/RtmpJnwTXb/Rlib --no-docs --no-help --no-demo --no-data --no-test-load /store/Dropbox 2>&1' had status 1\n[1] \"install: unrecognised option '--library=/tmp/RtmpJnwTXb/Rlib'\"\n[2] \"Try 'install --help' for more information.\"                   \nattr(,\"status\")\n[1] 1"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNTAwNTM4OA==", "comment_author": "vspinu", "comment_created_date": "2020-10-08T13:05:08Z", "comment_text": "I have removed the install part for now. I don't quite follow that part. The assumption is that the built package is already there, right? Does that always hold? What about devtools workflow?\nFor now I am sticking with the simple version - assume that the right version of the package is already installed and accessible. Seems to be the case on Travis and it's fine for local usage."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNTAxNzYyNA==", "comment_author": "infotroph", "comment_created_date": "2020-10-08T16:18:17Z", "comment_text": "Thanks! Glad this is even partially useful.\n\n\nYes, the install part is for devtools -- If I'm following right, devtools::test loads the package namespace on the fly rather than build it on disk, so building it manually seemed like the easiest way to ensure the current version is placed in Rscript's path. But it's slow as well as convoluted, and you could argue fairly that it's trying to reimplement R CMD check inside testthat.\n\n\nThe extra output is weeeird... I do not know why expect_match doesn't just accept on the substring:\n\n\n> x=paste(c('* WARNING: blah blah blah', '* [1] \"79200s (~22 hours)\"'), collapse=\"\\n\")\n> testthat::expect_match(x, \"(~22 hours)\", fixed=TRUE)\n>\n\nI'll poke at this some more and see if I can come up with a more robust approach. Will test it on a wider array of systems this time, and submit it as a fresh PR."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNTAyODUwOA==", "comment_author": "vspinu", "comment_created_date": "2020-10-08T18:39:09Z", "comment_text": "why expect_match doesn't just accept on the substring:\n\nThe \"paste\" part is that I have added. System returns multi-line output as a vector of lines. I guess expect_match accepts length one string and picks only first element silently otherwise.\n\nWill test it on a wider array of systems this time, and submit it as a fresh PR.\n\nOk. Thanks.\nIn any event, I am already pretty happy with this at the moment. Whenever I work I tend to re-install the library anyways, so that extra install is not very useful. If you are fine with that, then I think we are good for now."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNjQxNzY5Nw==", "comment_author": "vspinu", "comment_created_date": "2020-10-13T10:43:57Z", "comment_text": "I will be happy to fix this as it also creates occasional issues with file and symbol navigation in my editor.\nIt will have to wait a bit though as I am in the process of releasing new version to CRAN and it is stuck in review for a week only."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzOTI3Nzk0NQ==", "comment_author": "vspinu", "comment_created_date": "2020-10-25T09:54:51Z", "comment_text": "I doubt this change helps with the problem. GC is unlikely to be happening immediately, so you end up with two copies anyways.  Best solution is to drop it to C and avoid as.POSIXlt altogether.\nI will merge this once I cut the new release. 1.7.0 is pending CRAN's revision at the moment."}], "stringr": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDIzNDI0Mzk=", "comment_author": "hadley", "comment_created_date": "2020-10-10T02:26:24Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjUyNzY4MQ==", "comment_author": "hadley", "comment_created_date": "2020-10-30T13:35:58Z", "comment_text": "These just don't feel that compelling to me, because they're longer than the existing alternatives. I'd prefer to keep the vocabulary in stringr as small as possible."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjczNDQ5MQ==", "comment_author": "hadley", "comment_created_date": "2020-10-31T13:07:26Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE0OTg5OTg5Ng==", "comment_author": "dselivanov", "comment_created_date": "2020-10-21T13:43:58Z", "comment_text": "when this will be merged?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjUyNzQ4Nw==", "comment_author": "hadley", "comment_created_date": "2020-10-30T13:35:05Z", "comment_text": "@lmullen do you want to finish this off? It also needs a bullet point in NEWS"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjYzMTQyMA==", "comment_author": "lmullen", "comment_created_date": "2020-10-30T19:39:28Z", "comment_text": "@hadley Sorry, I screwed up squashing the pull request. Mind if I resubmit this as a new, clean PR?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjYzOTY3OA==", "comment_author": "hadley", "comment_created_date": "2020-10-30T20:09:09Z", "comment_text": "Yeah, sure"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjUyNjc3OA==", "comment_author": "hadley", "comment_created_date": "2020-10-30T13:30:49Z", "comment_text": "Like the comment at the top of the file says, you need to edit the source roxygen comment :/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE1MjY1OTYzNQ==", "comment_author": "hadley", "comment_created_date": "2020-10-30T21:53:59Z", "comment_text": "Thanks!"}]}