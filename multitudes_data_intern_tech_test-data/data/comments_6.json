{"ggplot2": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDE0NTU0MDU=", "comment_author": "hadley", "comment_created_date": "2020-06-28T13:20:22Z", "comment_text": "I'm still not certain about this change - it gets a bit confusing if you do something like ggsave(units = \"cm\").  What does that mean?\nAre you aware of the cm function?  That way you can at least do ggsave(width = cm(10), height = cm(10))"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE0NTU0NDU=", "comment_author": "jiho", "comment_created_date": "2020-06-28T13:27:13Z", "comment_text": "ggsave(units=\"cm\") is indeed confusing since it does nothing. Maybe it would be clearer if it affected the display of the size when width and height are not specified.\nI did not know about cm(). I still think having an explicit argument is more discoverable."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE0NTU2MTU=", "comment_author": "jiho", "comment_created_date": "2020-06-28T13:54:09Z", "comment_text": "What about with these new changes? The code is not clearer but the user interface is consistent, and improved I think.\nI understand that this might seem low priority. One get's used to american units after a while, even coming from a country using international standard units. But my students, who have not be confronted to this peculiarity yet, are completely put off by inches."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE0NzA1ODI=", "comment_author": "hadley", "comment_created_date": "2020-06-29T21:06:08Z", "comment_text": "Looking good - if you can fix those last formatting issues I'll pull it."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE0NzA2MTQ=", "comment_author": "jiho", "comment_created_date": "2020-06-29T21:09:55Z", "comment_text": "Done"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDYxNzQ1NDA=", "comment_author": "hadley", "comment_created_date": "2020-06-07T12:21:43Z", "comment_text": "@wch this should be trivial with gtable's z support."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDYzNjk3MTE=", "comment_author": "kohske", "comment_created_date": "2020-06-16T00:52:41Z", "comment_text": "And also may I close this pull request?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDYzNzMyMDE=", "comment_author": "hadley", "comment_created_date": "2020-06-16T13:28:21Z", "comment_text": "Yeah, I think we'll implement it differently."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDYxNzQ0ODE=", "comment_author": "hadley", "comment_created_date": "2020-06-07T12:17:33Z", "comment_text": "@wch this should be something that's easy to do with gtable - I don't think it should be an argument in ggplot2."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDYzNjk3MDc=", "comment_author": "kohske", "comment_created_date": "2020-06-16T00:52:13Z", "comment_text": "So may I close this pull request?"}], "lubridate": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDQ2MDExMjQ5", "comment_author": "garrettgman", "comment_created_date": "2020-06-13T13:33:47Z", "comment_text": "Thank you for catching that"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMwNTQ4MDIyNg==", "comment_author": "vspinu", "comment_created_date": "2020-06-01T12:36:03Z", "comment_text": "Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMwODk5NzU5Ng==", "comment_author": "vspinu", "comment_created_date": "2020-06-16T11:04:21Z", "comment_text": "Thanks!"}], "stringr": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTMxNDc4OQ==", "comment_author": "hadley", "comment_created_date": "2020-06-05T14:43:10Z", "comment_text": "Would you mind including tests for those features please?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTMxNDg2OQ==", "comment_author": "hadley", "comment_created_date": "2020-06-05T14:43:17Z", "comment_text": "(I really need to turn on code coverage)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTMyMTYyMg==", "comment_author": "smbache", "comment_created_date": "2020-06-05T15:04:03Z", "comment_text": "Sure.\nIn the meantime; which is better, a plus or a hyphen (or either) for the above feature?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExMDQ0NDI3Mg==", "comment_author": "smbache", "comment_created_date": "2020-06-09T17:46:17Z", "comment_text": "Added the tests."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExMDQ0NjYwMw==", "comment_author": "smbache", "comment_created_date": "2020-06-09T17:56:38Z", "comment_text": "What would you want to happen in the latter, where the expression is not a valid R expression? expect_error? And what is the idea for the second? That it is not a complete placeholder?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExMDQ3ODQwMg==", "comment_author": "gagolews", "comment_created_date": "2020-06-09T19:33:16Z", "comment_text": "I think that a clean error (parse error?) should be raised. What do you think?\nAnd in the first case, there should be no crash.\nAnd what about ${aaa   bbbb}? Also a parse error, aaa bbbb is not a valid name.\nAnd also: ${aaa${bbb}ccc} may be problematic"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExMTY5Nzg5Mg==", "comment_author": "smbache", "comment_created_date": "2020-06-13T10:49:44Z", "comment_text": "I think they give rather readable errors. Nested use of placeholders did not produce a nice error, but now this is checked and provides a better error. In general nested use is never allowed."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTQxNjA2OQ==", "comment_author": "hadley", "comment_created_date": "2020-06-05T19:39:34Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTk4NTMyOQ==", "comment_author": "hadley", "comment_created_date": "2020-06-08T13:02:24Z", "comment_text": "Could you please also add a bullet to NEWS.md?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTk5Mjk0MQ==", "comment_author": "gagolews", "comment_created_date": "2020-06-08T13:17:14Z", "comment_text": "Done."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwOTk5NDk5Mg==", "comment_author": "hadley", "comment_created_date": "2020-06-08T13:25:42Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExMjA0MTYxOA==", "comment_author": "hadley", "comment_created_date": "2020-06-15T12:19:30Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExNjAzOTUxNA==", "comment_author": "gagolews", "comment_created_date": "2020-06-27T12:47:48Z", "comment_text": "This works both for ICU 52 and ICU 55."}]}