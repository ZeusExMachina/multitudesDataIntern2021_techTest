{"ggplot2": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEwMw==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:16Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEwMQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:14Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEwNA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:18Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEwNg==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:20Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc0OQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:02Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEyMA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:30Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzA5Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:12Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEyMg==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:32Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzA5Mg==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:10Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzA4Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:08Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzA4NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:06Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzA4Mw==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:04Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc2OQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:08Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEyNA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:34Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzE0OA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:52Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDI5NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:06Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzE1MA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:54Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzA4MA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:02Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzE1Mg==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:56Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzE1NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:58Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODMwNw==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:32Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODMwNg==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:30Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODMwMw==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:28Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI5OA==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:26Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc5NjM4NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T16:55:52Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzE1Ng==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:08:00Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc3NjgzNQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T12:37:32Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI4NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:16Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODIzMw==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:20:42Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODIzNw==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:20:46Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMwNQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:12Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODIzNA==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:20:44Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc0Mg==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:24:58Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc2MQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:04Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMwMA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:10Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NjU2OA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:46:18Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI4Ng==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:18Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMwOA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:14Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc5NjM0OQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T16:55:34Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMxMg==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:16Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc0NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:00Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI3MQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:08Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgxNDE0Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T20:52:12Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMxNA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:18Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMxOA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:20Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMyMA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:22Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI3OA==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:14Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NjU2MA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:46:14Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMyNQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:24Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMyNw==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:26Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NjU1Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:46:12Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMzMw==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:28Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc5Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:22Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc4Mw==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:14Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc4Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:18Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc4NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:16Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMzNg==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:30Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI2NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:06Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDMzOA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:32Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDM0MA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:34Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEwOQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:22Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0MDM0NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T02:10:36Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NjU2Mw==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:46:16Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMjk2Nzg=", "comment_author": "hadley", "comment_created_date": "2012-01-02T13:32:59Z", "comment_text": "Looks good. Could you please also a bullet point to the news file?  (Including crediting yourself)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzExMQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:24Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMjk3MDE=", "comment_author": "hadley", "comment_created_date": "2012-01-02T13:37:03Z", "comment_text": "Is this different to #340?  It looks the same to me.\nAnswers to questions:\n(1) maybe closed and filled?\n(2) Off the top of my head, I don't know of any modelling functions that model the median apart from quantreg, which is dealt with in geom_quantile"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzAxNzA=", "comment_author": "djmurphy420", "comment_created_date": "2012-01-02T14:40:17Z", "comment_text": "I was modifying on the basis of the most recent version of the master I pulled from GitHub. Perhaps I should wait a couple of days for the changes to take effect... It is the same as 340, except segregated into its own branch. Re (1), closed and filled sounds good to me. Re (2), I don't know of any others either, but just wanted to point out that geom_smooth() doesn't always plot a conditional mean - just almost always :) If you're content with the current description, I don't have much problem since it is accurate with this one exception.\n\nFrom: hadley wickham reply@reply.github.com\nTo: Dennis Murphy djmurphy0420@yahoo.com\nSent: Monday, January 2, 2012 5:37 AM\nSubject: Re: [ggplot2] Geom docfix (#342)\nIs this different to #340? It looks the same to me.\nAnswers to questions:\n(1) maybe closed and filled?\n(2) Off the top of my head, I don't know of any modelling functions that model the median apart from quantreg, which is dealt with in geom_quantile\n\nReply to this email directly or view it on GitHub:\n#342 (comment)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzA1MDM=", "comment_author": "hadley", "comment_created_date": "2012-01-02T15:24:51Z", "comment_text": "We need to get you set up with a workflow that works regardless of what I'm doing.  I think if you do separate branches you should be ok.  I've closed #340 since it was duplicate of this."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzM5MzI=", "comment_author": "djmurphy420", "comment_created_date": "2012-01-02T21:37:32Z", "comment_text": "I think so, too. Keeping changes in separate chunks seems to be rather efficient to me, both in terms of organization on my end and your ability to check and respond. Winston suggested that I don't have to have separate branches for everything, which I'm sure is true, but I like the idea of having branches that are self-contained, particularly for documentation. If I were writing code, I might feel a bit differently about it.\nDennis\n\nFrom: hadley wickham reply@reply.github.com\nTo: Dennis Murphy djmurphy0420@yahoo.com\nSent: Monday, January 2, 2012 7:24 AM\nSubject: Re: [ggplot2] Geom docfix (#342)\nWe need to get you set up with a workflow that works regardless of what I'm doing. I think if you do separate branches you should be ok. I've closed #340 since it was duplicate of this.\n\nReply to this email directly or view it on GitHub:\n#342 (comment)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDEwMjY=", "comment_author": "wch", "comment_created_date": "2012-01-03T15:16:24Z", "comment_text": "@djmurphy420 Oh, I didn't realize that each commit/branch of yours was meant to address a separate problem. If that's the case, it might make sense to have a separate branch for each thing. But then it would make sense for them to each each be branched off of the main branch rather than being a sequence of commits that build on top of another, which is what it looks like now."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI0Ng==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:20:56Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMjQxMTI=", "comment_author": "kohske", "comment_created_date": "2012-01-01T09:16:39Z", "comment_text": "temporary fix. It will be improved when gtable packages is merged."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNjUzNjQ=", "comment_author": "kohske", "comment_created_date": "2012-01-05T04:06:02Z", "comment_text": "@BrianDiggs Thanks for the comment. I will check."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk0Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:29Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMjk2ODk=", "comment_author": "hadley", "comment_created_date": "2012-01-02T13:34:05Z", "comment_text": "It doesn't look like it can be automatically merged - could you please have a look into why?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzA1NDI=", "comment_author": "JakeRuss", "comment_created_date": "2012-01-02T15:27:53Z", "comment_text": "Interesting...I'll see what I can do."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk1MQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:31Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNzY0OTM=", "comment_author": "wch", "comment_created_date": "2012-01-05T21:17:29Z", "comment_text": "Is this related to your data loss issue from the mailing list? If the branch you were working on is present in your origin repo but it was lost on your local repo, you should be able to get it by doing this:\ngit fetch origin\ngit checkout -b customgrob origin/customgrob\n\nThis will create a new local branch customgrob that is based off of the remote branch origin/customgrob."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNzY1MTg=", "comment_author": "baptiste", "comment_created_date": "2012-01-05T21:20:09Z", "comment_text": "Indeed, thanks for the tip."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzExNA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:26Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDI0Mzk=", "comment_author": "hadley", "comment_created_date": "2012-01-03T16:48:04Z", "comment_text": "See also missing_s3 in the development devtools for an attempt to pick this up automatically."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDI5MzQ=", "comment_author": "wch", "comment_created_date": "2012-01-03T17:19:53Z", "comment_text": "OK, I started over, put @S3method in the appropriate place, and ran roxygenize."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDMyNTQ=", "comment_author": "hadley", "comment_created_date": "2012-01-03T17:41:19Z", "comment_text": "Looks good. Thanks"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk1NA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:33Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzNDMxNjg=", "comment_author": "hadley", "comment_created_date": "2012-01-03T17:35:51Z", "comment_text": "Looks good!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk1OA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:35Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzODA5NzA=", "comment_author": "kohske", "comment_created_date": "2012-01-06T05:11:58Z", "comment_text": "test code:\ndf1 <- data.frame(x = c(1, 1, 2, 2), y = c(1, 2, 1, 2), z = 1:4)\ndf2 <- data.frame(x = 1:3, y = 1, z = 1:3)\ndf3 <- data.frame(y = 1:3, x = 1, z = 1:3)\ndf4 <- data.frame(x = 1:3, y = 1:3, z = 1:3)\n\nf <- function(d) {\n  p <- ggplot(d, aes(x, y, fill = z))\n  print(p + geom_tile() + opts(title = \"tile\") + geom_text(aes(label = z), colour = \"white\"))\n  print(p + geom_raster() + opts(title = \"raster\") + geom_text(aes(label = z), colour = \"white\"))\n}\n\nf(df1)\nf(df2)\nf(df3)\nf(df4)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzOTU2MDc=", "comment_author": "kohske", "comment_created_date": "2012-01-07T13:02:00Z", "comment_text": "Finally I rewrote a part of drawing code. Here is a general rule:\n1 introducing \"padding\", which is enables to control the size of raster.\n2 by default, padding are calculated by resolution\n3 otherwise, hpad and vpad can be specified in the unit of data space."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTg2Mjc=", "comment_author": "hadley", "comment_created_date": "2012-01-25T20:45:31Z", "comment_text": "I turned pad to just in 42c1ed3"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk2Mw==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:37Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0Mzk3NjU=", "comment_author": "wch", "comment_created_date": "2012-01-11T00:08:11Z", "comment_text": "Oops, this pull request was in the wrong repo.\nEdit: Oops again, this pull request was in the right repo!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk2NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:39Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk2Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:41Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1NDYzMDI=", "comment_author": "hadley", "comment_created_date": "2012-01-18T14:24:31Z", "comment_text": "And could you please not check in the NAMESPACE file? Because of a buglet in roxygen it will conflict with my version."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1NTUzMjU=", "comment_author": "djmurphy420", "comment_created_date": "2012-01-18T23:37:09Z", "comment_text": "I don't understand what you mean here. Could you elaborate a little, please?\n\nFrom: hadley wickham reply@reply.github.com\nTo: Dennis Murphy djmurphy0420@yahoo.com\nSent: Wednesday, January 18, 2012 6:24 AM\nSubject: Re: [ggplot2] Faster example sets for selected geoms/stats (#356)\nAnd could you please not check in the NAMESPACE file? Because of a buglet in roxygen it will conflict with my version.\n\nReply to this email directly or view it on GitHub:\n#356 (comment)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1NTYxNDI=", "comment_author": "wch", "comment_created_date": "2012-01-19T00:51:22Z", "comment_text": "@djmurphy420 In your commit, the NAMESPACE file was changed, probably from running roxygenize. It sorts the entries differently on different platforms. This can lead to merge conflicts when the file is also changed in another branch.\nAnyway, you should be able to revert NAMESPACE to the previous version by doing this:\ngit checkout HEAD^ NAMESPACE\ngit commit -a \n\nThis will get the version of NAMESPACE from the parent of the current commit (that's what HEAD^ means)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTg3Njc=", "comment_author": "hadley", "comment_created_date": "2012-01-25T20:53:05Z", "comment_text": "Done in 83a2275"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk3MA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:43Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI1OQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:04Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTg4Njk=", "comment_author": "wch", "comment_created_date": "2012-01-21T20:47:06Z", "comment_text": "Decided to use a different method to fix the issue."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk3Mw==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:45Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTE2NTQ=", "comment_author": "wch", "comment_created_date": "2012-01-20T22:17:27Z", "comment_text": "Finding the range for abline, hline, or vline doesn't work quite right with coord_map, because x.range and y.range don't refer to quite the same thing as they do in other coord transformations. I think x.raw and y.raw are what's needed.\nThis is what's in the scales object with the Italy example in the coord_map help:\n$x.raw\n[1] 165.7878 179.1712\n\n$y.raw\n[1] -48.05607 -33.74861\n\n$x.range\n[1] -0.1167924  0.1167924\n\n$y.range\n[1] -1.1128004 -0.6681436\n\nI'm not sure what exactly x.range and y.range should mean so I'm not sure how to handle this."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTE3MDQ=", "comment_author": "hadley", "comment_created_date": "2012-01-20T22:22:34Z", "comment_text": "How about coord_mapping?\nThe ranges in coord_map are the ranges of the transformed values (after they've been projected).  If this seems inconsistent with the other coords, you could change that too.  Maybe x.raw -> x.range and x.range -> x.proj ?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTE5MTk=", "comment_author": "wch", "comment_created_date": "2012-01-20T22:39:12Z", "comment_text": "OK, I rebased the changes to use coord_mapping instead of coord_find_varmapping. (I hope you don't mind all the rebasing - I like having a cleaner commit history.)\nI'll look into the range stuff with coord_map."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTg2ODY=", "comment_author": "wch", "comment_created_date": "2012-01-21T20:14:57Z", "comment_text": "I'm changed coord-map.r so that x.raw -> x.range and x.range -> x.proj, and I'm now trying to get lines to show up at all with coord_map(). I've come across a section in coord-munch.r that has this code:\n  data$x[data$x == -Inf] <- range$x.range[1]\n  data$x[data$x == Inf] <- range$x.range[2]\n  data$y[data$y == -Inf] <- range$y.range[1]\n  data$y[data$y == Inf] <- range$y.range[2]\n\nWill this work properly with the changes to x.range and y.range? I don't know this part well enough to know how to test it."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTkwODc=", "comment_author": "wch", "comment_created_date": "2012-01-21T21:25:51Z", "comment_text": "In coord-map.r, I modified t x.raw -> x.range and x.range -> x.proj. Here's the current status of the lines with coord_map:\n\ngeom_vline works.\ngeom_hline doesn't show up. I got it to appear by hacking in a workaround for the dist_central_angle issue, but that's not a real solution. When the distance bug (#365) is fixed, geom_hline should work.\ngeom_abline doesn't work. Update: geom_abline does work. I was previously using incorrect values for intercept and slope.\n\nIn short, everything should work when the distance bug is fixed. If you want to test, install my experimental branch (where I've made the present changes and addressed the distance bug) and run through the visual tests.\nHere are the examples I've been testing with. They're derived from the coord_map help:\nlibrary(maps)\nlibrary(mapproj)\n\nnz <- data.frame(map(\"nz\", plot=FALSE)[c(\"x\",\"y\")])\nnzmap <- qplot(x, y, data=nz, geom=\"path\")\n\nnzmap + geom_hline(yintercept=-45) + coord_map()\nnzmap + geom_vline(xintercept=172) + coord_map()\nnzmap + geom_abline(intercept=130, slope=-1) + coord_map()\n\nnzmap + geom_hline(yintercept=-45) + coord_map(project=\"cylindrical\")\nnzmap + geom_vline(xintercept=172) + coord_map(project=\"cylindrical\")\nnzmap + geom_abline(intercept=130, slope=-1) + coord_map(project=\"cylindrical\")\n\nnzmap + geom_hline(yintercept=-45) + coord_map(project='azequalarea',orientation=c(-36.92,174.6,0))\nnzmap + geom_vline(xintercept=172) + coord_map(project='azequalarea',orientation=c(-36.92,174.6,0))\nnzmap + geom_abline(intercept=130, slope=-1) + coord_map(project='azequalarea',orientation=c(-36.92,174.6,0))\n\nAs I was working on this, I had a major \"duh\" moment when realized that it's New Zealand and not Italy, as I mentioned earlier!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MTY2Mjc=", "comment_author": "wch", "comment_created_date": "2012-01-23T16:21:47Z", "comment_text": "Abandoning this pull request in favor of #368."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgxNDE0MQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T20:52:08Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTkyNzI=", "comment_author": "wch", "comment_created_date": "2012-01-21T21:55:34Z", "comment_text": "@hadley Please see the line of code with the comment (I don't know if the comment showed up on this pull request page in a way that makes it easy for you to see.)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MDA0MzQ=", "comment_author": "hadley", "comment_created_date": "2012-01-22T01:20:53Z", "comment_text": "Thanks - that was a dumb mistake.  You could add a check for equal lengths if you want - the assumption is that they will be because that function gets called with columns from a data frame."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MDA0OTU=", "comment_author": "wch", "comment_created_date": "2012-01-22T01:34:01Z", "comment_text": "OK, that makes sense. Instead of adding a length check, I just changed it so it indexes into lat by using length(lat), instead of length(lon). This shouldn't change functionality, but it will make things less confusing for anyone who looks at the code in the future."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk3NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:47Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MTM4ODk=", "comment_author": "hadley", "comment_created_date": "2012-01-23T13:42:21Z", "comment_text": "Could you please add a note to news and maybe a few examples in geom_vline, hline, abline of using them with different coordinate systems?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MTY2NTU=", "comment_author": "wch", "comment_created_date": "2012-01-23T16:23:26Z", "comment_text": "I made the changes. In geom_vline, the coordinate transform examples used last_plot(), but I got rid of last_plot() because it seemed wrong to keep adding more coord transforms on top of previous ones."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MTgyMzU=", "comment_author": "hadley", "comment_created_date": "2012-01-23T17:46:29Z", "comment_text": "Looks good.  And it probably is a good idea to get rid of last_plot()"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk3OQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:49Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2MTU5MDY=", "comment_author": "wch", "comment_created_date": "2012-01-23T15:44:05Z", "comment_text": "Oops, I accidentally hit the close button. Anyway, this latest commit does it using count."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk4MQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:51Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDc5Mw==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:25:20Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTIwMTQ=", "comment_author": "hadley", "comment_created_date": "2012-01-25T15:02:10Z", "comment_text": "Could you please also implement for scale_datetime? Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTMwNTM=", "comment_author": "kohske", "comment_created_date": "2012-01-25T15:57:45Z", "comment_text": "Wow, fast-forwardable. git is so neat!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTQwNzU=", "comment_author": "wch", "comment_created_date": "2012-01-25T16:48:21Z", "comment_text": "You may already know this, but... If you make a mistake in a commit that you want to revert, you can fix it, commit, and then run git rebase -i HEAD^ and squash the new commit into the old one. In this case you can still do it (even after adding more commits) by running git rebase HEAD~4.\nOnce you've rebased it, you need to force a push to github with git push -f origin mybranch. If you do this, the github pull request will reflect the new series of commits, instead of the old series. (I know all of this because I'm guilty of rebasing a lot.)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTQxMzc=", "comment_author": "kohske", "comment_created_date": "2012-01-25T16:51:21Z", "comment_text": "Thanks. I know the git push -f origin mybranch but I don't know how the comments (in particular, line note for source codes) on the old branch are.\nDoes they disappear?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTQyNjk=", "comment_author": "wch", "comment_created_date": "2012-01-25T16:57:52Z", "comment_text": "The line notes stay there, but you can't look at the full file anymore. You can see an example in #369. Hadley made a line note, and then I rebased and pushed. In the first line note (before the rebase), there's no link in the upper right for \"view full changes\" because that commit disappeared after the rebase. In the other notes (after the rebase), the link is still there."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM2NTQzMjU=", "comment_author": "kohske", "comment_created_date": "2012-01-25T17:00:41Z", "comment_text": "Thanks again. I got it.\nSo as long as no one pulled the pushed branch, we can remove and re-push without any problem."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk4Mg==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:53Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM3NDQ4Njg=", "comment_author": "hadley", "comment_created_date": "2012-01-31T18:32:18Z", "comment_text": "The commit message has a spelling mistake :/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk4Ng==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:57Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk4NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:55Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc3NjgzNw==", "comment_author": "lock", "comment_created_date": "2019-01-19T12:37:34Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk5MA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:18:59Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI1Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:02Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk5Mg==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:19:01Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NDk5NQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:19:03Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI3Nw==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:12Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc1MzEyOA==", "comment_author": "lock", "comment_created_date": "2019-01-19T06:07:36Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NTAwMg==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:19:05Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI1Mg==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:21:00Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0ODI0OA==", "comment_author": "lock", "comment_created_date": "2019-01-19T04:20:58Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NTAxMA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:19:07Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc0NTAxNA==", "comment_author": "lock", "comment_created_date": "2019-01-19T03:19:09Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTc4NDczOQ==", "comment_author": "lock", "comment_created_date": "2019-01-19T14:24:56Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}], "lubridate": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjI3NDE3", "comment_author": "vspinu", "comment_created_date": "2013-01-23T22:53:22Z", "comment_text": "Hi guys, you are moving with the speed of light.  I got a bit busy and didn't follow the development recently.\nI wonder if ymd_hms_z and ymd_hms_o could be handled happily by ymd_hms without loss in efficiency.  Arguably fewer smarter functions is better than many specific ones.\nymd_hms_z is just a wraper to ymd_hms, right? So why is it here?. ymd_hms_o is a bit more involved.  I don't remember why I didn't include this format back in august. May be because it was not feasible, or may be be because I just didn't think about it.\nIan, have you tried to tweak ymd_hms?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjI5NDE0", "comment_author": "ijlyttle", "comment_created_date": "2013-01-23T23:45:21Z", "comment_text": "Hi Vitalie,\nI agree that ymd_hms_z is essentially a wrapper for ymd_hms - the only difference is that I removed the tz argument, in favor of passing \"UTC\" on to ymd_hms.\nMy motivation in proposing a separate function was to have a defined behavior for anyone (like me) who would try a goofy call like:\nymd_hms(\"2012-03-04T05:06:07Z\", tz=\"America/Chicago\")\n\nPerhaps a cleaner approach would be use ymd_hms and find a way to offer a warning.\nMy motivation in my initial offering was to propose code that was completely external, so that it would be obvious what I was trying to do, and it would be easy to remove.\nI am all for a cleaner implementation, but lack the skills. Looking at the commit records, I see you did a lot of stuff for this package, especially parse. I don't want to get in the way of someone who knows what they are doing. As I told Garrett, my purpose was to propose a way, not the way.\nTo answer your question, I haven't picked this back up since December, but I stand ready to help.\nIan"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjMwMTY5", "comment_author": "vspinu", "comment_created_date": "2013-01-24T00:04:55Z", "comment_text": "Ian Lyttle notifications@github.com\non Wed, 23 Jan 2013 15:45:22 -0800 wrote:\n\nMy motivation in proposing a separate function was to have a defined\nbehavior for anyone (like me) who would try a goofy call like:\nymd_hms(\"2012-03-04T05:06:07Z\", tz=\"America/Chicago\")\n\nPerhaps a cleaner approach would be use ymd_hms and find a way to\noffer a warning.\n\nSo what is the clean approach here? Ignore tz (with warning), or convert\ninto \"America/Chicago\" tz?\nWith respect to ymd_hms_o, it should have been enough to enrich the\ndefault order-formats with a couple of orders containing \"z\". Try\nlubridate::lubridate_formats to see the default orders that lubridate\npasses to parse_date_time. Unfortunately there is a pending bug #150\nwith z format right now.\nThanks for the input."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjUyOTQ1", "comment_author": "ijlyttle", "comment_created_date": "2013-01-24T14:20:36Z", "comment_text": "So what is the clean approach here? Ignore tz (with warning), or convert\ninto \"America/Chicago\" tz?\n\nI would suggest ignoring the tz and issuing a warning. We know that that supplying a \"Z\" in the string and supplying a non-UTC tz represents a conflict.\nThe other way, as pointed out, is to take the UTC time and then apply the \"America/Chicago\" tz. However, I think that doing this would change the expected behavior of ymd_hms in this case; it would be changing a timezone (acting like with_tz), rather than forcing a timezone (like force_tz) as it normally does.\nLooking now at what parse_date_time does, I agree that enriching the default order formats is the way to go. Looking at the error message, that is an impressive regular-expression that gets built up :)\nTo get rid of the rest of my code (outputting with offsets), I should look at stamp(), like Garrett suggested."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjUzNTU0", "comment_author": "vspinu", "comment_created_date": "2013-01-24T14:34:28Z", "comment_text": "Ian Lyttle notifications@github.com\non Thu, 24 Jan 2013 06:20:36 -0800 wrote:\nSo what is the clean approach here? Ignore tz (with warning), or convert\ninto \"America/Chicago\" tz?\n\nI would suggest ignoring the tz and issuing a warning. We know that\nthat supplying a \"Z\" in the string and supplying a non-UTC tz\nrepresents a conflict.\nThe other way, as pointed out, is to take the UTC time and then apply the\n\"America/Chicago\" tz. However, I think that doing this would change the expected\nbehavior of ymd_hms in this case; it would be changing a timezone (acting like\nwith_tz), rather than forcing a timezone (likeforce_tz`) as it normally does.\n\nIndeed, this looks like the most sensible and clean approach.\n\nLooking now at what parse_date_time does, I agree that enriching the\ndefault order formats is the way to go. Looking at the error\nmessage, that is an impressive regular-expression that gets built up\n:)\n\nI am working on this right now. It turned out not to be as\nstrightforward as I thought. strptime doesn't support time zones in\n-80:00 format, nor -80. The only thing that works by adding the %z\nformat is -8000. And this is clearly not enough, as more and more data\nout there is in -80:00 format.\nThat basically means that we need to make a preliminary gsub and make\nsome other adjustments in case -80:00 format is detected. Thus quite\nsome surgery of the internals is required.\nWe of course can just leave the things as they are now, but it is less\nconvenient, and the speed hit is rather big. In my tests ymd_hms_o 8-9\ntimes slower than ymd_hms.\nVitalie"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjc3OTgy", "comment_author": "ijlyttle", "comment_created_date": "2013-01-24T22:40:43Z", "comment_text": "Vitalie,\nI agree with all the changes you suggest. Let me know if/how I can help.\nI never claimed to write fast or convenient code :)\nIan"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNjgzNjM0", "comment_author": "vspinu", "comment_created_date": "2013-01-25T01:29:07Z", "comment_text": "Ian Lyttle notifications@github.com\non Thu, 24 Jan 2013 14:40:44 -0800 wrote:\n\nI agree with all the changes you suggest. Let me know if/how I can\nhelp.\n\nAt this stage, you can definitely help with testing. Everything so far\nworked as expected, including your test cases. I have moved them in\ncentral location in test-parser.R. See pull request #158.\nVitalie"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNzAyNjk1", "comment_author": "ijlyttle", "comment_created_date": "2013-01-25T14:29:38Z", "comment_text": "Hi Vitalie,\n\nEverything so far worked as expected, including your test cases.\n\nGreat success!\nI have pulled your branch to my computer - I'll should have some time this weekend to poke around.\nI'll resume conversation over at #158.\nIan"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNTA1NTI4", "comment_author": "hadley", "comment_created_date": "2013-01-21T16:35:02Z", "comment_text": "I think you've misunderstood export vs s3method - @S3method c POSIXct already exports the POSIXct method for c."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNTE5OTI1", "comment_author": "imanuelcostigan", "comment_created_date": "2013-01-21T22:04:56Z", "comment_text": "Indeed. Sorry about that."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNTIyNTQ4", "comment_author": "imanuelcostigan", "comment_created_date": "2013-01-21T23:07:21Z", "comment_text": "Would you be able to help me with understanding how this works? If I used @export and not @S3method, my package (which depends on lubridate) knows to use the lubridate implementation of c. However, if I use @S3method (i.e. as per master) then my package uses the base package implementation.\nFrom R-ext:\n\nThe namespace controls the search strategy for variables used by functions in the package. If not found locally, R searches the package namespace first, then the imports, then the base namespace and then the normal search path.\n\nHere's how I translate this for my package:\n\nc is not defined locally\nc is not available in my package's namespace.\nmy package's namespace contains import(lubridate) which includes either the S3method and exportMethods for c (as per master) . However, when I use the @export tag, lubridate's NAMESPACE uses export(c.POSIXct) and omits the S3method (unsuprisingly).\n\nWhy is this causing me grief?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNTIyODMx", "comment_author": "hadley", "comment_created_date": "2013-01-21T23:15:12Z", "comment_text": "Hmm, could you create a small reproducible example? The rules for S3 method lookup differ from the regular rules, but they're not well documented (or and may well be buggy)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNTIzMTYx", "comment_author": "imanuelcostigan", "comment_created_date": "2013-01-21T23:26:26Z", "comment_text": "Sure thing. First assume lubridate's NAMESPACE is as per master. Now assume that I have written a package that has the following in the NAMESPACE:\nimport(lubridate)\n\nIn my package I have a generic dostuff:\nsetGeneric (\n  name = \"dostuff\",\n  def = function (object)\n  {\n    standardGeneric(\"dostuff\")\n  }\n)\n\nA method for this generic is (date_slot1 and date_slot2 are of class POSIXct with tz(date_slot1) = \"UTC\")\nsetMethod (\n  f = \"dostuff\",\n  signature = signature(\"AnS4Class\"),\n  definition = function (object) \n  {  \n    dates <- c(object@date_slot1, object@date_slot2)\n    numbers <- c(object@number1, object@number2)\n    df <- data.frame(Date = dates, Number = numbers)\n    return (df) \n  }\n)\n\nThen the Date field in the df returned by the method is using my machine's time zone (i.e. EST).\nHowever, if I modify lubridate's master and use the export tag, then the Date field in the df returned by the doStuff method is using UTC.\nIs this the kind of example you were after?\nSeparately, using the master version of lubridate, on require(lubridate) I get the following message:\n\nLoading required package: lubridate\n\nIf I use the code from my pull request (I assume the @export tag overwrites the @S3method tag), I get this:\n\nLoading required package: lubridate\nAttaching package: \u2018lubridate\u2019\nThe following object(s) are masked from \u2018package:base\u2019:\nc.POSIXct\n\nThat makes more sense to me."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNTIzNDIy", "comment_author": "imanuelcostigan", "comment_created_date": "2013-01-21T23:34:10Z", "comment_text": "I've copied lubridate's code for c.POSIXct into my package as a stop gap until I figure out what is going on with the package namespace issues."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNzEyMTA0", "comment_author": "garrettgman", "comment_created_date": "2013-01-25T17:46:05Z", "comment_text": "\"Although the lubridate version could potentially be improved by using each list element's tz attribute rather than just the first element.\"\nI like the way you are thinking, but R's POSIXct system can't handle more than one tz per POSIX vector. If it gets a vector of tz's it assumes the vector has the form c(time zone,  time zone name not during DST, time zone name during DST).\nI tried to do something like this when I made c.POSIXt but I didn't want to chase it so far as to make an entirely new class for POSIX objects  ...which might not be a bad idea. If you can think of a simpler approach, I'm game."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNzE0NzU2", "comment_author": "garrettgman", "comment_created_date": "2013-01-25T18:45:49Z", "comment_text": "Vitoshka, thank you for continuing to solve the parsing problems. These changes look great.\nWould you please change these three things before I merge them? We've implemented these behaviors in the past due to issues and suggestions, and I'd like to keep them around.\n\nThe parsers should continue to return NA when they get a single element that they cannot parse. e.g,\n\nymd(NA) # NA\nas.POSIXct(NA) # NA\nstrptime(NA, format = \"%H%M%S\") # NA\n\nThis is to keep lubridate consistent with the current version as well as base R, like in the examples above. Also failing to parse shouldn't cause a warning, just an NA. This will solve 3) as well.\n\nBy default, parsing should continue to not return a message like \"1 parsed with %Y%m%d\" unless the user asks for it or more than nine elements are being parsed at once. We want to keep simple operations clean, e.g.\n\nymd(20120101) > ymd(20110101)\n[1] TRUE\n\n\nThe tests shouldn't return any warnings when they run correctly. The cran maintainers probably won't like that :P"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNzM0ODY5", "comment_author": "vspinu", "comment_created_date": "2013-01-26T12:46:00Z", "comment_text": "Garrett Grolemund notifications@github.com\non Fri, 25 Jan 2013 10:45:50 -0800 wrote:\n\nWould you please change these three things before I merge them?\nWe've implemented these behaviors in the past due to issues and\nsuggestions, and I'd like to keep them around.\n\nThe parsers should continue to return NA when they get a single\nelement that they cannot parse. e.g,\n\nymd(NA) # NA\nas.POSIXct(NA) # NA\nstrptime(NA, format = \"%H%M%S\") # NA\n\n\nIf this works it should work for arbitrary NA vectors. I agree that NA\nshould propagate. This is not controversial and is easy to implement. I\nwill do that.\n\n\nBy default, parsing should continue to not return a message like \"1 parsed\nwith %Y%m%d\" unless the user asks for it or more than nine elements are being\nparsed at once. We want to keep simple operations clean, e.g.\n\nymd(20120101) > ymd(20110101)\n[1] TRUE\n\n\nI am afraid restricting warning/error messages to length(x)>10 is\ninconsistent and almost stochastic (from user perspective)\nbehavior. Let's better figure a good default.\nYesterday, I have spent a whole day working with big date-time objects\nand I am quite sure about the following:\n\n\nThere should be a way to avoid the \"no formats found\" error. That\nis, return a NA POSIXct as standard functions do. This is hugely\nhelpful in programming. Treating it with tryCatch all the time is a\nbig pain in the neck.\n\n\nThe \"N failed to parse\" warning should stay by default,\nirrespective of the length(x). This warning doesn't occur that often\nand is very instructive.\n\n\nMessages \"N parsed with %X%Y%Z\" are not so useful, except to\ndevelopers. So they should not be there at all by default.\n\n\nHere is the proposal. Let's make the verbosity configurable by the user\noption. We now have the boolean \"quiet\" argument. Let's make it numeric\nwith the following (or similar) conventions:\n\nquiet = -1 or FALSE: show all messages/warnings/errors\nquiet = 0 (the default): don't show process messages \"N parsed with\n...\", but show  \"N failed to parse\" and \"No formats could be found\"\nwarnings.\nquiet = 1 or TRUE: Don't show any messages and return NA if failed.\n\nAlso, let's make lubridate functions to pick this option from\noptions(\"lubridate.quiet\").\nAs to whether \"No formats could be found\" should be an error or\nwarning. I am a bit more inclined to make it a very silent warning (aka\nimediate.=TRUE). This for internal code consistency reason that I have\npointed in other thread, and for the user convenience reason that you\nhave pointed in the same thread. Moreover it is a cleaner approach as\nfar the semantic meaning of \"quiet\" is concerned, which refers to\nmessages and not errors.\nI would also prefer replacing \"quiet\" with \"verbose\", then\noptions(\"lubridate.verbose\") could have a wider meaning for the whole\nlubridate package, and not only for the parser. Not backward compatible\nthough. You decide:)\n\n\nThe tests shouldn't return any warnings when they run\ncorrectly. The cran maintainers probably won't like that :P\n\n\nSure :)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNzM3NzA2", "comment_author": "ijlyttle", "comment_created_date": "2013-01-26T16:34:31Z", "comment_text": "Hi guys,\nI didn't hit the pull request button because the request should go to Vitalie, rather than Garrett/Hadley. I'll get the hang of this github thing eventually.\nIn my github branch for iso8601, I have modified test-parsers.R. When ymd_hms is given the inconsistent arguments:\n\n\"Z\" or \"-HH:MM\" in the string, and\nnon-UTC tz\n\nit should return UTC, ignoring tz (currently fails), and issue a warning (currently passes).\nFrom my discussion with Vitalie, this was my understanding of his intention, so I am presenting this as a bug rather than a philosophical disgreement.\nSnippet for \"Z\":\n  ## Inconsistent usage - suppress warning to check return value only\n  suppressWarnings(\n    expect_that(ymd_hms(\"2012-03-04T05:06:07Z\", tz=\"America/Chicago\"), \n                equals(ymd_hms(\"2012-03-04 05:06:07\", tz=\"UTC\")))\n  )\n  ## Inconsistent usage - check for warning\n  expect_that(ymd_hms(\"2012-03-04T05:06:07Z\", tz=\"America/Chicago\"), \n              gives_warning(\"Date in ISO8601 format; timezone ignored\"))  \n\nOtherwise everything looks great! I am thankful that the ugly code can be retired. (But I still need to look at using stamp in favor of helper_offset, right?)\nIan"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyNzM4NDQ1", "comment_author": "vspinu", "comment_created_date": "2013-01-26T17:21:48Z", "comment_text": "Ian Lyttle notifications@github.com\non Sat, 26 Jan 2013 08:34:31 -0800 wrote:\n\nFrom my discussion with Vitalie, this was my understanding of his\nintention, so I am presenting this as a bug rather than a\nphilosophical disgreement.\n\nThanks Ian. I will merge from your branch.  Indeed, the intent is to\nignore tz with warning. Something went astray.\nVitalie"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NDg3MzUy", "comment_author": "larmarange", "comment_created_date": "2015-01-01T14:04:26Z", "comment_text": "A quick comment about period computation from intervals:\n> naiss <- ymd_hms(\"1992-02-29 12:00:00\")\n> evt <- ymd_hms(\"2014-03-01 01:00:00\")\n> as.period(interval(naiss, evt))\n[1] \"22y 0m -1d 13H 0M 0S\"\nShould we avoid negative days?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NDg3ODI3", "comment_author": "vspinu", "comment_created_date": "2015-01-01T14:29:44Z", "comment_text": "This should not happen. It's a bug in as.period.\nOn Jan 1, 2015 6:04 AM, \"Joseph\" notifications@github.com wrote:\n\nA quick comment about period computation from intervals:\n\nnaiss <- ymd_hms(\"1992-02-29 12:00:00\")> evt <- ymd_hms(\"2014-03-01 01:00:00\")> as.period(interval(naiss, evt))\n[1] \"22y 0m -1d 13H 0M 0S\"\n\nShould we avoid negative days?\n\u2014\nReply to this email directly or view it on GitHub\n#295 (comment)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NTEzMDA5", "comment_author": "vspinu", "comment_created_date": "2015-01-02T08:12:25Z", "comment_text": "naiss <- ymd_hms(\"1992-02-29 12:00:00\")\nevt <- ymd_hms(\"2014-03-01 01:00:00\")\ntime_length(interval(naiss, evt), \"years\")\n[1] 21.99874\n\n\nWell. There is a mirror problem with negative intervals that use %m+%:\n> time_length(interval(ymd_hms('2000-02-29 12:00:00'), ymd_hms('1999-02-28 20:00:00')), \"years\")\n[1] -0.9990868\n\nSo we will have to change %m+% as well, and I am not sure that's a good idea. %m+% will basically make all intraday timestamps for Feb 29 equal, and that's clearly not suitable for intraday analysis.\nOne easy solution is to add an optional argument to rollback and .month_plus and .month_plus_plus. Something like preserve_hms = TRUE.\nBTW. your .rollback_day_one can also be integrated into rallback with an optional argument  roll_to_first = FALSE or something similar."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NTIyMTA2", "comment_author": "larmarange", "comment_created_date": "2015-01-02T11:55:51Z", "comment_text": "You are right.\nWe can also add roll_to_first to .month_plus.   In that scenario, we don't need %m++ and .month_plus_plus  (as it's not exported) and we can use directly .month_plus in time_length.\nI will update the pull request."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NTI0ODI4", "comment_author": "larmarange", "comment_created_date": "2015-01-02T12:55:39Z", "comment_text": "When we think with time, even for negative intervals we should not use %m-%. In fact, the anniversary should be the 28 Feb at 24:00:00, i.e. the 1st March at 00:00:00.\nTherefore, the code is simpler.\nNow, we obtain:\n> time_length(interval(ymd_hms('2000-02-29 12:00:00'), ymd_hms('1999-02-28 20:00:00')), \"years\")\n[1] -1.000457"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NjMzMDc0", "comment_author": "larmarange", "comment_created_date": "2015-01-04T13:35:30Z", "comment_text": "Tests and examples added for rollback. Code of time_length updated with ifelse(x@.Data < 0, -1, 1)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY4NjQzMTI5", "comment_author": "vspinu", "comment_created_date": "2015-01-04T18:31:27Z", "comment_text": "Great! Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcxMzQwMzg4", "comment_author": "vspinu", "comment_created_date": "2015-01-24T22:19:20Z", "comment_text": "Thanks. If it's not difficult for you, could you please squash commits 2,3 and 4th into one, as they relate to the same change?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcxMzc5NjYz", "comment_author": "Kevin-M-Smith", "comment_created_date": "2015-01-25T16:25:24Z", "comment_text": "Hi @vspinu, thanks for your feedback. I attempted to squash everything. How's it look?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMTc2MDA2", "comment_author": "vspinu", "comment_created_date": "2015-01-30T09:36:42Z", "comment_text": "Hi Kevin.\nIt looks good, but the comint message doesn't comply to standards. It should not contain \"This comit makes ...\", nor it should contain \"to lubridate\". These are obvious statements.\nMessages should be imperative like, \"Make small changes to ...\" or simply \"Small changes to documentation\".  Here is a good summary of standards."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMjI3MjA4", "comment_author": "Kevin-M-Smith", "comment_created_date": "2015-01-30T16:24:41Z", "comment_text": "Hi @vspinu - I don't mean to burn through your time with these small edits. Thanks for helping me build better habits!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMjUxODk5", "comment_author": "vspinu", "comment_created_date": "2015-01-30T19:01:15Z", "comment_text": "I don't mean to burn through your time with these small edits.\n\nIt's also your time ;). But it pays back in long run.\nIf I merge now I will merge  3 commits of yours - 2 identical commits which differ only in messages and one merge commit.  You can see this in the network graph.\nThe way you should fix previous commits is not through new branches and merges as you seem to do, but rather through git comit --amend or git reset HEAD^ and then git commit.  Then git push --force.\nCould you please do git reset --hard bed50964 and then git push --force to get rid of the old branch?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMjY4NDE2", "comment_author": "Kevin-M-Smith", "comment_created_date": "2015-01-30T20:52:52Z", "comment_text": "Thanks, I didn't realize the patch-2 branch was visible to this pull request.\nI've dropped it and reset the HEAD as requested."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMjcyNjc5", "comment_author": "vspinu", "comment_created_date": "2015-01-30T21:24:03Z", "comment_text": "Thanks. \ud83d\udc4d"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMTcyNzY0", "comment_author": "jiho", "comment_created_date": "2015-01-30T09:06:00Z", "comment_text": "Should really have run check(). Additional commits fix mistakes."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMTcyOTc2", "comment_author": "jiho", "comment_created_date": "2015-01-30T09:08:05Z", "comment_text": "Example of what used to fail:\n> x <- 20140101000000\n> as.character(x)\n[1] \"2.0140101e+13\"\n> format(x, scientific = FALSE, trim = TRUE)\n[1] \"20140101000000\"\n> .num_to_date(x)\n[1] \"20140101000000\"\n\nIt seems like a bug in as.character actually but it is probably safer to fix it here rather than wait for as.character to change..."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMTczMTgz", "comment_author": "vspinu", "comment_created_date": "2015-01-30T09:10:04Z", "comment_text": "Thanks. Could you please add a small test for this?\nCould you also squash your commits into one? We try to stick to one-commit-per-change rule to make it easier to navigate the history."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMTczMjA4", "comment_author": "jiho", "comment_created_date": "2015-01-30T09:10:23Z", "comment_text": "Regarding performance, format would actually be even a bit better:\n> x <- round(runif(10^7) * 100000)\n> system.time(as.character(x))\n   user  system elapsed \n  7.786   0.015   7.816 \n> system.time(format(x, scientific = FALSE, trim = TRUE))\n   user  system elapsed \n  6.412   0.013   6.431"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMTc2MjM4", "comment_author": "jiho", "comment_created_date": "2015-01-30T09:39:03Z", "comment_text": "Tests are added and everything is squashed into one commit"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcyMjcyODYy", "comment_author": "vspinu", "comment_created_date": "2015-01-30T21:25:23Z", "comment_text": "This PR made me think, are there other places as.character will fail similarly?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3MzgzMDY1NQ==", "comment_author": "vspinu", "comment_created_date": "2016-01-22T07:13:52Z", "comment_text": "How about reporting this to knitr?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3Mzg3NzUwOA==", "comment_author": "vspinu", "comment_created_date": "2016-01-22T10:51:42Z", "comment_text": "Ok. Let's fix that for now. Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NTE0Nzg3Ng==", "comment_author": "joethorley", "comment_created_date": "2016-01-26T18:08:29Z", "comment_text": "This is my first attempt at a pul request please let me now if I have made any faux pas"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NjA0MjEyOA==", "comment_author": "vspinu", "comment_created_date": "2016-01-28T07:56:36Z", "comment_text": "I made the documentation for date these files also got updated.\n\nre-documenting should not touch code files. I think you did some merges locally and some of the changes that I did before now show as your changes. Try to re-base on master and if it doesn't help, start with a clean tree and copy paste your accessors-date.R file and re-document again."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NjA0NDM4Mw==", "comment_author": "vspinu", "comment_created_date": "2016-01-28T08:01:47Z", "comment_text": "We will also need some tests for this functions. Could you please add a few? Also please look at #355. I think using make_datetime and then as.Date might get us into trouble.\nBTW, the commit message should probably be \"[Fix #373] Add 'date' accessors` in order to automatically close the issue.\nThanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NjMyODcwNg==", "comment_author": "vspinu", "comment_created_date": "2016-01-28T18:36:08Z", "comment_text": "Are you planing to do whitespace cleanups for all files like this? There are ways to clean all files of trailing whitespaces but I don't see much point in that. It's an editor thing. Some editors just leave those spaces after auto-fill, indent etc. Please don't bother with them."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NjMzMDI2Nw==", "comment_author": "joethorley", "comment_created_date": "2016-01-28T18:38:14Z", "comment_text": "I've switched off in my editor"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NzEzMTA1OQ==", "comment_author": "vspinu", "comment_created_date": "2016-01-30T09:41:51Z", "comment_text": "Two notes on working with git:\n\nYou don't need to open a new issue each time you re-write your commits. Just do git push --force. Github will update the pull request automatically.\nEach commits must deal with one issue. That makes it easy to navigate in the history.  Could you please squash your two commits into one. If you are using R-studio or some other git-aware editor, there must be a way to do an interactive rebase and squash commits interactively. Otherwise from command line follow these instructions."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1NzMxMjQyNg==", "comment_author": "khotilov", "comment_created_date": "2018-01-12T18:08:32Z", "comment_text": "This change messed up the lubridate licensing. Previously, the package license was simply GPL, without mention of the specific version. IANAL, but my understanding was that it allowed us to assume any GPL version. Thus, the assumption of GPLv3 was kind of making it compatible with the Apache-2 license of the included cctz code. A GPLv2 work cannot include Apache-2-licensed code (e.g., see here or here). While there seem to exist some exceptions to that, I doubt those would be relevant for an R package. Besides, the src/tparse.c mentions that it is under GPL \"either version 2 of the License, or (at your option) any later version\", which I would interpret as GPLv2+. So I don't follow the reason given here for the change to GPLv2."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1NzQzNTU0NA==", "comment_author": "vspinu", "comment_created_date": "2018-01-13T13:33:21Z", "comment_text": "Right. I was not paying enough attention to licensing :/ Will fix all these licencing issues asap."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI3MjkwMzAwMA==", "comment_author": "alberthkcheng", "comment_created_date": "2017-01-16T16:12:19Z", "comment_text": "pls check again the comment in #401 . thanks :)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI3Mjk2ODcyNQ==", "comment_author": "vspinu", "comment_created_date": "2017-01-16T21:43:00Z", "comment_text": "Thanks, but this is not backward compatible, but I guess it's the right way to go anyways.\nCould you please add a note to NEWS.md and check if there are tests for english locale?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI3MzM5NjEyMg==", "comment_author": "alberthkcheng", "comment_created_date": "2017-01-18T06:35:55Z", "comment_text": "NEW.md and tests are added for month and wday"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTkxNjkwMA==", "comment_author": "vspinu", "comment_created_date": "2018-01-23T20:17:52Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM1OTk1NjczNw==", "comment_author": "vspinu", "comment_created_date": "2018-01-23T22:42:30Z", "comment_text": "Damn. I guess I was under heavy influence when I wrote that :/  Thanks!"}], "stringr": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzAwNjI=", "comment_author": "hadley", "comment_created_date": "2012-01-02T14:26:31Z", "comment_text": "Do named captures only work with perl regular expressions?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzAxNTM=", "comment_author": "tdhock", "comment_created_date": "2012-01-02T14:38:14Z", "comment_text": "Yes, named captures only work with perl regexp because it uses a\nspecial regexp named group syntax (?pattern) that is only valid\nusing the PCRE library. Those named groups give syntax errors under\nregular regexps."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzA0ODQ=", "comment_author": "hadley", "comment_created_date": "2012-01-02T15:22:39Z", "comment_text": "And regexec doesn't automatically name the results?  Annoying.  Maybe it would be a good idea to send that as a request to r-devel?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMzMzExODU=", "comment_author": "tdhock", "comment_created_date": "2012-01-02T16:40:25Z", "comment_text": "Well, regexec doesn't support perl regexps, and perl is required for\nnamed capture, so it is normal that regexec doesn't name the results.\nThe g?regexpr(,perl=TRUE) functions DO return the name specified in\nthe (?pattern), but the match+group start and end locations are\nin a different format."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEyMDM0MjY4", "comment_author": "gagolews", "comment_created_date": "2013-01-09T07:25:49Z", "comment_text": "Confirming, this is a good fix - could you please merge that?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcwNjUyMTMz", "comment_author": "hadley", "comment_created_date": "2015-01-20T13:23:51Z", "comment_text": "My main concern with this approach is that every other function in stringr starts with str_, but if you added that prefix str_left(x, 10)/str_right(x, 10) would be more typing than the equivalent str_sub(x, 1,  10), str_sub(x, -10, -1)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDcwNjY0ODY1", "comment_author": "nachti", "comment_created_date": "2015-01-20T14:52:20Z", "comment_text": "Ok. I changed it to str_left / str_right and use stringi now. That's faster. If you use the functions with the default n to get just the left- or rightmost character some typing ist saved e.g. str_left(x) and it's easier to use in combination with apply & friends."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI3MDAzMjAzOA==", "comment_author": "hadley", "comment_created_date": "2017-01-02T23:29:17Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI3MDAzMTg5Ng==", "comment_author": "hadley", "comment_created_date": "2017-01-02T23:27:35Z", "comment_text": "FWIW you also need to modify the description:\nLicense: GPL-2 | file LICENSE"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI3MDAzMTk5NA==", "comment_author": "hadley", "comment_created_date": "2017-01-02T23:28:40Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1MTUwNzAwMQ==", "comment_author": "hadley", "comment_created_date": "2019-01-04T17:13:59Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1MTUwNjcxOA==", "comment_author": "hadley", "comment_created_date": "2019-01-04T17:12:58Z", "comment_text": "Yes, it's correct - it's sample input to the regular expression."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1MTUwNjU5Mg==", "comment_author": "hadley", "comment_created_date": "2019-01-04T17:12:27Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgwMDY3Nw==", "comment_author": "hadley", "comment_created_date": "2019-01-19T17:50:13Z", "comment_text": "It looks like there's some whitespace problem in the NAMESPACE. Would you mind checking in roxygen2 to see if there's already an issue? (I assume you're using windows, but roxygen2 should handle this)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgwMDc1NQ==", "comment_author": "hadley", "comment_created_date": "2019-01-19T17:51:03Z", "comment_text": "Can you please add a bullet to NEWS? It should briefly describe the change and end with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgwMDc4OQ==", "comment_author": "hadley", "comment_created_date": "2019-01-19T17:51:20Z", "comment_text": "(I'll can fix the whitespace issue, but I want to make sure it's tracked somewhere)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgwMTIyMA==", "comment_author": "jonthegeek", "comment_created_date": "2019-01-19T17:55:56Z", "comment_text": "It looks like there's some whitespace problem in the NAMESPACE. Would you mind checking in roxygen2 to see if there's already an issue? (I assume you're using windows, but roxygen2 should handle this)\n\nr-lib/roxygen2#840"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgxMTE1Mw==", "comment_author": "beckymaust", "comment_created_date": "2019-01-19T20:07:33Z", "comment_text": "Thanks for the feedback! I updated the syntax. Hopefully this is correct now."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgxMTQ1OQ==", "comment_author": "hadley", "comment_created_date": "2019-01-19T20:11:31Z", "comment_text": "Thank you!!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ1NTgxNDc1MA==", "comment_author": "hadley", "comment_created_date": "2019-01-19T21:00:13Z", "comment_text": "Thank you!!"}]}