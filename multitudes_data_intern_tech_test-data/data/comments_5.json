{"ggplot2": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTc4NjI=", "comment_author": "jiho", "comment_created_date": "2020-05-18T15:59:43Z", "comment_text": "As far as I see all these are currently fixed in the develop branch"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTQ1Njk=", "comment_author": "kohske", "comment_created_date": "2020-05-18T02:36:01Z", "comment_text": "close this and open new PR on the develop branch."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTc3NjE=", "comment_author": "jiho", "comment_created_date": "2020-05-18T15:43:53Z", "comment_text": "Changes 8a238f7 where implemented in and the remaining changes are in a new pull request."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTE2MTA=", "comment_author": "kohske", "comment_created_date": "2020-05-17T16:55:31Z", "comment_text": "Something wired is taking place with regards to this pull request.\nThe pull request for axis had been dropped. So please ignore them.\nThe fix for zoom is very small code, so maybe it is better to fix it by hand."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTE2NDU=", "comment_author": "kohske", "comment_created_date": "2020-05-17T16:59:05Z", "comment_text": "hi,\nscale_limits.continuous() uses the scales$y$limits\nscale_breaks.continuous() uses the scale_limits()\nand scale_break_positions() uses the scale_beaks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTQ5NjM=", "comment_author": "kohske", "comment_created_date": "2020-05-18T04:43:43Z", "comment_text": "reconstructing commit tree. close for a while."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDExOTQ5Njk=", "comment_author": "kohske", "comment_created_date": "2020-05-18T04:45:45Z", "comment_text": "reconstructing commit tree. close for a while."}], "lubridate": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDE3MzQ4NzE2", "comment_author": "vspinu", "comment_created_date": "2020-05-02T16:29:10Z", "comment_text": "Hi Ian,\nI have reviewed your changes and that is indeed the way to go. I have modified it slightly to call with_tz conversion only when needed (aka ISO8601 and non UTC tz). See dc6f53b. It also solves tz=\"\" treatment that was wrongly forced to UTC before.\nYour issue_178 branch is part of my issue_178 and is pulled as #182, so you can safely remove your pull.\nOne last thing. If you propose a change in the future, could you please start a clean branch from hadley/master. Otherwise it becomes quite a history mess, see #182 for an example :)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NDM1OTEw", "comment_author": "ijlyttle", "comment_created_date": "2020-05-04T15:37:08Z", "comment_text": "Glad we have found the solution.\nI will remove the pull shortly.\nIn future, I will start a clean branch. Still fumbling my way around this place, and glad for everyone's patience.\nThanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3MzUwNjA2", "comment_author": "vspinu", "comment_created_date": "2020-05-02T17:02:28Z", "comment_text": "Sorry, but I have hard time understanding your proposal.\nWhat does it mean to round a date to \"lastweek\"? Why not \"nextweek\", \"yersterday\" or \"last Christmas\"?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3MzkyMDYw", "comment_author": "psarnow", "comment_created_date": "2020-05-03T12:41:10Z", "comment_text": "This effectively changes the definition of which day floor_date rounds to.  I don't always want to round to Sunday's.  Instead there are some applications where rounding to the weekday of 7 days ago would be preferred.  This is addressing that.\nAdditionally, nextweek, or yesterday could be created as well....I just don't have need for them."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3MzkzNDM4", "comment_author": "garrettgman", "comment_created_date": "2020-05-03T13:17:20Z", "comment_text": "Is this different than just setting the week element back by one?, e.g.\ndate <- now()\nweek(date) <- week(date) - 1\n\nI don't see what is actually being rounded here. It seems to just be being set. Maybe we need something like.\nround_date(date, \"Sunday\")\nround_date(date, \"Monday\")\nround_date(date, \"Tuesday\")"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NDAyOTg4", "comment_author": "vspinu", "comment_created_date": "2020-05-03T16:09:10Z", "comment_text": "@psarnow\nOk, now I understand the point. This can be done with:\nfloor_date(now(), \"week\") + days(2)\n\nI think there is no much point in implementing parametric rounding (like\n\"week\" floor to \"Tuesday\"), because then, for consistency, you will\nhave to implement \"day\" rounding to a specific hour, \"month\" rounding to\na specific day, etc"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDE3NDA0MDAw", "comment_author": "psarnow", "comment_created_date": "2020-05-03T16:27:39Z", "comment_text": "@Vitoshka\nfloor_date(now(), \"week\") + days(2)\nAwesome!  Much better implementation.\nThank you for fielding this consideration.\nOn Fri, May 3, 2013 at 10:09 AM, Vitalie Spinu notifications@github.comwrote:\n\n@psarnow\nOk, now I understand the point. This can be done with:\nfloor_date(now(), \"week\") + days(2)\nI think there is no much point in implementing parametric rounding (like\n\"week\" floor to \"Tuesday\"), because then, for consistency, you will\nhave to implement \"day\" rounding to a specific hour, \"month\" rounding to\na specific day, etc\n\u2014\nReply to this email directly or view it on GitHubhttps://github.com//pull/185#issuecomment-17402988\n."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ0MDcxNTM3", "comment_author": "garrettgman", "comment_created_date": "2020-05-24T00:02:22Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ0MDcxNDk5", "comment_author": "garrettgman", "comment_created_date": "2020-05-24T00:01:37Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ0MDcxNjg2", "comment_author": "garrettgman", "comment_created_date": "2020-05-24T00:05:52Z", "comment_text": "Thanks, mmparker!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDk4MDQ1MTQ0", "comment_author": "jonboiser", "comment_created_date": "2020-05-01T04:52:25Z", "comment_text": "It seems like there was a lot of activity in the repo since I started the PR. I rebased my fork on top of hadley/master"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDk4MDk1MDEx", "comment_author": "vspinu", "comment_created_date": "2020-05-01T10:25:31Z", "comment_text": "So this one fixes #278, right? Could you please start the commit message with [Fix #278] so that that issue is automatically closed."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDk4MTQyMjYy", "comment_author": "vspinu", "comment_created_date": "2020-05-01T14:13:53Z", "comment_text": "start the commit message with [Fix #278]\n\nNever mind. I fixed that and merged your pull manually. Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxNzk0MTg3MQ==", "comment_author": "vspinu", "comment_created_date": "2020-05-09T18:06:17Z", "comment_text": "Thanks. Could you please add tests for this new feature? Also the current checks fail."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxODA0MDQ4MQ==", "comment_author": "codecov-io", "comment_created_date": "2020-05-10T02:02:37Z", "comment_text": "Current coverage is 77.73%\n\nMerging #414 into master will increase coverage by +0.44%\n\n@@             master       #414   diff @@\n==========================================\n  Files            42         42          \n  Lines          2368       2362     -6   \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n+ Hits           1830       1836     +6   \n+ Misses          538        526    -12   \n  Partials          0          0          \n\nPowered by Codecov. Last updated by fd00b11...3a43f2d"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxODA0MDczNA==", "comment_author": "jonboiser", "comment_created_date": "2020-05-10T02:04:46Z", "comment_text": "Just added tests for the new options, squashed the commits, and made sure CI passed. Let me know this needs anything else before it's ready."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxODEzMTgzOA==", "comment_author": "vspinu", "comment_created_date": "2020-05-10T11:33:56Z", "comment_text": "Very nice!\nDoes this work with Date objects as expected? I know we don't many tests for that but could you add a couple of checks for Date objects as well? You can produce dates directly with ymd or make_date now.\nPlease also add a line to news.md with a link to #268.\nThis completely fixes #268, right? If so, please add [Fix #268] to the commit header to automatically close it.\nThanks a lot!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxODE3NjQ4NA==", "comment_author": "jonboiser", "comment_created_date": "2020-05-10T14:34:02Z", "comment_text": "All done! I added the extra tests to the \"floor/ceiling_date works for a variety of formats\" to test that they work on Date class."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxODE3OTE0Ng==", "comment_author": "jonboiser", "comment_created_date": "2020-05-10T14:42:23Z", "comment_text": "Had to do a couple more pushes to get the commit message right and rebuild the docs!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIxODE5MzcyMQ==", "comment_author": "vspinu", "comment_created_date": "2020-05-10T15:27:11Z", "comment_text": "Perfect. Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDU2NDY5OQ==", "comment_author": "vspinu", "comment_created_date": "2020-05-20T09:54:30Z", "comment_text": "Yes. We will need some more tests for parsing. Could you please add them. Also add [Fix #411] in the commit message to automatically close the issue. Thanks for this."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDYxMjkyNg==", "comment_author": "cderv", "comment_created_date": "2020-05-20T13:59:01Z", "comment_text": "Ok. I will try to write some tests in test-parsers.R for parsing with mdy and b or B format.\n\nI could add [Fix #411 ] in the commit message but I understood that Github automatically close PR even if fixes #411 is added to the comment of the PR as I did. Capture of the Issue page :\n\nsee Closing Issues via Pull Requests"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDY1MzM4NQ==", "comment_author": "codecov-io", "comment_created_date": "2020-05-20T16:27:26Z", "comment_text": "Current coverage is 77.73%\n\nMerging #415 into master will not change coverage\n\n@@             master       #415   diff @@\n==========================================\n  Files            42         42          \n  Lines          2362       2362          \n  Methods           0          0          \n  Messages          0          0          \n  Branches          0          0          \n==========================================\n  Hits           1836       1836          \n  Misses          526        526          \n  Partials          0          0          \n\nPowered by Codecov. Last updated by 5b8c8fe...6bd7209"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDY1NTU2Mw==", "comment_author": "cderv", "comment_created_date": "2020-05-20T16:36:25Z", "comment_text": "I added some tests for b and B formats. Actually, the issues in #411 was for a date format with no separators and with January. Tests I pushed cover this. Could had some more if we want to test parsing for all combination because I may have missed some.\nAs Travis checks passed, mdy(\"January131973\")  works now.\nAre we ok?\nShould I update NEWS file now with a commit containing [Fix #411] ?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDcwOTY2NQ==", "comment_author": "vspinu", "comment_created_date": "2020-05-20T20:24:27Z", "comment_text": "Should I update NEWS file now with a commit containing [Fix #411] ?\n\nAh. Sure. This is a major change. Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDgzMDE0OA==", "comment_author": "cderv", "comment_created_date": "2020-05-22T12:36:04Z", "comment_text": "I add a line in NEWS using the correct format I believed.\nDon't know your contributor policy, so if my PR still miss something tell me.\nFor example, don't know if I should modify something in DESCRIPTION.\nIf we are good, last things to do is merging! Glad I could find this bug and contribute!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDIyMDk2NjcwNA==", "comment_author": "vspinu", "comment_created_date": "2020-05-23T12:30:10Z", "comment_text": "This is good. Thanks! \ud83d\udc4d"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI5ODU2NzU3Mg==", "comment_author": "vspinu", "comment_created_date": "2020-05-02T09:06:28Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI5ODM2OTc2NQ==", "comment_author": "vspinu", "comment_created_date": "2020-05-01T16:39:16Z", "comment_text": "as.hms is rather confusing in the lubridate context. We have hms parser which returns a period. In retrospect it should have probably been duration, but now it's too late.\nAlso time_of_day should return a duration not an interval. The best way to achieve that is to invoke as.POSIXlt and extract hour, min and sec from there, no floor_date involved. This is pretty lightweight and can be in the hms package itself.\nI also think  as.hms is unnecessary. You can make the constructor hms dispatch on the object. No need for time_of_day either, hms(posix_object) can do that. This would address the use cases by @randomgambit, if I am not mistaken."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI5ODM5Njk3NA==", "comment_author": "randomgambit", "comment_created_date": "2020-05-01T18:35:22Z", "comment_text": "@vspinu thanks for your answer.\nI am not quite sure to undestand what you propose.\nSay I have a string: timestamp = '2015-05-05 20:02:42.453' that I can parse using\n time_parsed = ymd_hms(timestamp)\nWhat you are saying is that we can type directly\nhms(time_parsed)  without having to use the as.hms syntax?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI5ODQzOTAxMA==", "comment_author": "krlmlr", "comment_created_date": "2020-05-01T21:34:49Z", "comment_text": "hms(Sys.time()) doesn't work on my system:\nlubridate::hms(Sys.time())\n#> Warning in .parse_hms(..., order = \"HMS\", quiet = quiet): Some strings\n#> failed to parse\n#> [1] NA\nThanks for your suggestion to use POSIXlt, there seems to be a use case for that data type after all ;-)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI5ODU2MjUxMQ==", "comment_author": "vspinu", "comment_created_date": "2020-05-02T08:52:37Z", "comment_text": "hms(Sys.time()) doesn't work on my system:\n\nhms is a parser, it accepts strings only. We can generalize it of course, but it will return a period (not a duration or difftime). A period is a pretty heavy object and doesn't play nicely with data frames. This is precisely why I am in favour to keep hms lightweight objects separately."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI5ODU2MzgxMg==", "comment_author": "vspinu", "comment_created_date": "2020-05-02T08:56:14Z", "comment_text": "What you are saying is that we can type directly hms(time_parsed) without having to use the as.hms syntax?\n\nNo. I was proposing to @krlmlr to avoid as.hms altogether in hms package but to generalize hms::hms constructor to accept strings, POSIXt and Date objects. So that you can do hms(timestamp) > hms(\"9:30\") without much ado. Of course that would mean loading hms after lubridate because hms has a different meaning in lubridate."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMwMzI0NTczNw==", "comment_author": "vspinu", "comment_created_date": "2020-05-22T23:18:06Z", "comment_text": "Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDMwNTIzNzkzMA==", "comment_author": "vspinu", "comment_created_date": "2020-05-31T16:14:14Z", "comment_text": "Thanks. But it should be fixed in the code's roxygen comment. Rd's are product of roxygenition."}], "stringr": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDU2MDA2MzU=", "comment_author": "rubenarslan", "comment_created_date": "2020-05-09T13:57:44Z", "comment_text": "Maybe isn't completely clear from this focus on named captures, but currently the reliance on regexec means \"perl()\" is broken for str_match (and maybe other functions, didn't test).\nThat's not just named captures but also lookahead etc. Had me stumped and maybe it isn't intended, because it's not documented? Tdhock's commit fixes this for me, i.e. regexp with lookahead works as expected now.\nPerl regexps not supported by regexec\nError in regexec(\"(([a-zA-Z0-9_]+)(?=q[1-4])|([a-zA-Z0-9]+))(_q([1-4]))?y([0-9][0-9])?(m([0-1][0-9]))?\",  :\nregcomp error: 'Invalid regexp'"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDk5NDcwNDI1", "comment_author": "hadley", "comment_created_date": "2020-05-06T13:53:27Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwNjkwODA0Mw==", "comment_author": "hadley", "comment_created_date": "2020-05-29T19:22:48Z", "comment_text": "Easiest way to update is to make a branch for the PR - then when you update the branch, the PR updates automatically."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDEwNjkwODA4MA==", "comment_author": "hadley", "comment_created_date": "2020-05-29T19:23:02Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MDc1OA==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:31:36Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MTA0MA==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:32:30Z", "comment_text": "Can you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzUxMTA4Nw==", "comment_author": "hadley", "comment_created_date": "2020-05-08T19:13:04Z", "comment_text": "Actually, I'll add the news."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MDE2OA==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:29:49Z", "comment_text": "Unfortunately we can't do this because R CMD check will complain that we're linking to a package that's not listed in the DESCRIPTION \ud83d\ude22"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MDYyMg==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:31:12Z", "comment_text": "Can you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM5MjYwMDEyNg==", "comment_author": "amhrasmussen", "comment_created_date": "2020-05-28T20:39:36Z", "comment_text": "@hadley I've added a bullet to NEWS.md. No issue has been created for this, so I've left that out."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzUyNjc3Nw==", "comment_author": "hadley", "comment_created_date": "2020-05-08T20:09:20Z", "comment_text": "The combination of the specificity and the simplicity of the implementation means that this doesn't feel right in stringr to me."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ3OTQ3MA==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:27:42Z", "comment_text": "Thanks! I don't think it's worth discussing all the special cases here - it gets complicated fast."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MDM5OQ==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:30:31Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MDUyNA==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:30:55Z", "comment_text": "Can you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4NzQ4MDkzOQ==", "comment_author": "hadley", "comment_created_date": "2020-05-08T17:32:14Z", "comment_text": "Actually, would be better to do this as part of #206"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM4Nzc3NjQ5MA==", "comment_author": "hadley", "comment_created_date": "2020-05-09T15:22:49Z", "comment_text": "I played around a bit and I like it best inline, right after news.\nA few other thoughts:\n\nSince it's full width we could make the thumbnail contain both pages\nYour dpi trick didn't work - for GitHub I think it's easiest to just link to the retina image and set width and height\nThe image gets embedded in the package which makes it a bit heavier. I wonder if it would be better to render the thumbnails in the cheatsheet repo and then hotlink to them"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ4ODM5ODYwNQ==", "comment_author": "hadley", "comment_created_date": "2020-05-01T20:03:35Z", "comment_text": "Thanks Sara, I'll take it from here \ud83d\ude04"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQwNzk2Ng==", "comment_author": "hadley", "comment_created_date": "2020-05-14T21:00:54Z", "comment_text": "Thanks @sastoudt \u2014 I made a few more tweaks to make it a bit more concise, and added a few more details where appropriate. I really appreciate all your work on this!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ5MjQxODYyMA==", "comment_author": "hadley", "comment_created_date": "2020-05-14T21:34:38Z", "comment_text": "Let me know if there's anything I can do to help you to get academic credit for this \u2014 if you remind me in a few months, I can give you an estimate of how many people have read it. The stringr site is the 6th most popular in the tidyverse, so it should be read by at least a few thousand people,"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQ5MjY3NDAxMw==", "comment_author": "sastoudt", "comment_created_date": "2020-05-15T14:17:30Z", "comment_text": "Awesome, thank you! I'll definitely check in for some stats in a few months for my CV."}]}