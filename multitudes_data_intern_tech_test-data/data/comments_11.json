{"ggplot2": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDU0Mjg4OQ==", "comment_author": "hadley", "comment_created_date": "2020-11-15T17:32:05Z", "comment_text": "Finally got around to pulling in all this code - thanks!  However, in the future, could you please do a separate pull request for each feature?  That will make it easier for me to check the code and provide feedback."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDU2NTgyMw==", "comment_author": "kohske", "comment_created_date": "2020-11-25T03:52:09Z", "comment_text": "Another two commits.\nI wonder what is the best way to use pull request...\nNew push appeared in old pull-request.\nSorry if you have an inconvenience for merging these commits.\nThe first one implements a new feature, and the second one is a bug fix.\nRe: the new feature\nhttp://groups.google.com/group/ggplot2/browse_thread/thread/7c5454dcc04bc7b8/9b5a308a18d5b145?lnk=gst&q=relative#9b5a308a18d5b145\nand\nhttp://stackoverflow.com/questions/4205764/adjusting-the-relative-space-of-facets-without-regard-to-coordinate-space\nBoth are on facet-grid-.r.\nTest codes:\n# manually specifies the size of each column and row in facet_grid\n\n# facet_grid accepts the parameter widths and heights\n\nnr <\\- 16\nfac1 <\\- gl(2, 1, nr, labels = c(\"1A\", \"1B\") )\nfac2 <\\- gl(2, 2, nr, labels = c(\"2C\", \"2D\") )\nfac3 <\\- gl(2, 4, nr, labels = c(\"3E\", \"3F\") )\nfac4 <\\- gl(2, 8, nr, labels = c(\"4A\", \"4B\") )\ndummy <\\- data.frame(x = rnorm(nr), y = rnorm(nr), fac1, fac2, fac3, fac4)\n\n# usage\n\np <\\- ggplot(dummy, aes(x, y)) + geom_point()\nps <\\- list()\nps[[1]] <\\- p + facet_grid(fac1 + fac2 ~ fac3 + fac4)\nps[[2]] <\\- p + facet_grid(fac1 + fac2 ~ fac3 + fac4, widths = 1:4, heights = 4:1)\n\nprint(ps[[1]])\nprint(ps[[2]])\n\n# fixed horizontal spacing bug in facet grid when nrow of hstrip >= 2\n\n#\n\n# vgap has to be determined from bottom to up order.\n\n# As for, it worked, probably unintentionally, when nrow of hstrip <= 1.\n\n# Now this is fixed.\n\nd <\\- data.frame(expand.grid(f1=paste(\"A\",1:2),\n                            f2=paste(\"B\",1:2),\n                            f3=paste(\"C\",1:2),\n                            f4=paste(\"D\",1:2)),\n                            x=1, y=1)\np <\\- ggplot(d, aes(x,y)) + geom_point()\n\nps <\\- list()\nps[[1]] <\\- p + facet_grid(f1+f2~f3+f4)\n\nprint(ps[[1]])"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1OTQyMDY=", "comment_author": "hadley", "comment_created_date": "2020-11-01T18:49:21Z", "comment_text": "Perfect - thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1OTQxOTM=", "comment_author": "hadley", "comment_created_date": "2020-11-01T18:48:44Z", "comment_text": "Is this the correct fix?  The principle with alpha is that it is applied to fill if a geom uses it, otherwise it's applied to colour."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1OTczMjI=", "comment_author": "kohske", "comment_created_date": "2020-11-01T22:53:56Z", "comment_text": "Ok, I get the principle. So I'will fix this patch."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQzNjM0MjU5Nw==", "comment_author": "lock", "comment_created_date": "2020-11-06T17:42:25Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQzNjM0MjYxOA==", "comment_author": "lock", "comment_created_date": "2020-11-06T17:42:29Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDQzNjM0MjYwOA==", "comment_author": "lock", "comment_created_date": "2020-11-06T17:42:27Z", "comment_text": "This old issue has been automatically locked. If you believe you have found a related problem, please file a new issue (with reprex) and link to this issue. https://reprex.tidyverse.org/"}], "lubridate": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NTg2ODg5", "comment_author": "garrettgman", "comment_created_date": "2020-11-15T17:23:18Z", "comment_text": "Jason, this is failing the tests. I think you want to force the result to be an integer. Thanks for offering the function. When you get it working I'll be happy to pull the request."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NTg3NzAw", "comment_author": "jasonelaw", "comment_created_date": "2020-11-15T17:33:45Z", "comment_text": "I'll take a look at it and fix any issues.  I wasn't sure whether it was of interest."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NTg4Mjc0", "comment_author": "garrettgman", "comment_created_date": "2020-11-15T17:41:19Z", "comment_text": "It's of interest, I've just been a little busy. I'm going to resubmit lubridate to cran at the end of next week. No hurry, but if you get it fixed by then, I'll put it in the next release. Thanks again."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NjA0MDc4", "comment_author": "jasonelaw", "comment_created_date": "2020-11-15T21:17:34Z", "comment_text": "I made a couple of changes to deal with the test errors.  Changed the division to integer division to ensure that the week would be integer.  Was still getting an error (incompatible classes for subtraction) with the date because of:\nnth - jan1\nI coerced the input to a POSIXct object using ISOdate to fix the class incompatibility.  Also added tests for handling vector objects for completeness."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NjA0MzU4", "comment_author": "jasonelaw", "comment_created_date": "2020-11-15T21:21:32Z", "comment_text": "Neglected to say that the tests all pass now.  Additionally, I'm not sure what the best way to add the 'isoweek' usage to the 'week' help file.  @rdname?  I thought I might butcher it so I left it as is."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NjA3NzIz", "comment_author": "garrettgman", "comment_created_date": "2020-11-15T22:10:44Z", "comment_text": "Thanks Jason, looks good. I'll work on the documentation."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NTg4MDMw", "comment_author": "garrettgman", "comment_created_date": "2020-11-15T17:38:12Z", "comment_text": "Ian, When I run olson_time_zones from your pull request, I get this error message (on a Mac OS). It looks like that's what the function is meant to return, but it's causing your code to fail your new test in test-timezones.R\nolson_time_zones()\nError in olson_time_zones() : \n  zone.tab file not found in any candidate location: /Library/Frameworks/R.framework/Resources/share/zoneinfo/zone2.tab /usr/share/zoneinfo/zone2.tab\n\nCan you take a look at the function and the test and decide which you want to change? Thanks."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NTkwMDA4", "comment_author": "ijlyttle", "comment_created_date": "2020-11-15T18:04:32Z", "comment_text": "Hi Garrett,\nIt seems I made a dumb mistake, leaving in a deliberate typo that I used to test. \"zone2.tab\" ----> \"zone.tab\"\nIt works for me now. It should (?!) work for you."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI4NTk3MDYz", "comment_author": "garrettgman", "comment_created_date": "2020-11-15T19:35:36Z", "comment_text": "Thanks, Ian. That did it."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NzU1OTIwMg==", "comment_author": "ctbrown", "comment_created_date": "2020-11-01T12:53:48Z", "comment_text": "\u200bVitalie,\nI think this is properly cleaned up now.  Can you please confirm when you\nhave a chance.\nC-\u200b\nOn Tue, Oct 25, 2016 at 4:32 PM, Vitalie Spinu notifications@github.com\nwrote:\n\nWill probably provide a new PR.\nYou can simply push with -force on this branch.\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#484 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AC5xa_NHwG3043wPlY4qfWWNH01dvq92ks5q3pF4gaJpZM4Ka3ld\n."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NzYzOTk3Mg==", "comment_author": "vspinu", "comment_created_date": "2020-11-01T17:53:20Z", "comment_text": "It's still conflicting. I will have a look."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NzY0NzU5Mw==", "comment_author": "vspinu", "comment_created_date": "2020-11-01T18:15:58Z", "comment_text": "Merged. Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDI1NzY2MTA3Ng==", "comment_author": "ctbrown", "comment_created_date": "2020-11-01T18:59:45Z", "comment_text": "Excellent!  Thanks.\nC-\nOn Tue, Nov 1, 2016 at 11:16 AM, Vitalie Spinu notifications@github.com\nwrote:\n\nMerged. Thanks!\n\u2014\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub\n#484 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AC5xa8kbOfj_l2rJDJ2eenrs6mQpyzfrks5q54HhgaJpZM4Ka3ld\n."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0MTEwODM0Mw==", "comment_author": "vspinu", "comment_created_date": "2020-11-01T13:38:49Z", "comment_text": "Arh. I guess this is on windows. I wondered for a second how come that the checks haven't picked that up. Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0MTEzNTYzNA==", "comment_author": "cderv", "comment_created_date": "2020-11-01T15:12:33Z", "comment_text": "yes it is on windows. should have mentioned it..."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NjI5ODA5NQ==", "comment_author": "vspinu", "comment_created_date": "2020-11-22T09:48:06Z", "comment_text": "Thanks!"}], "stringr": [{"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4NDY3", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:14:55Z", "comment_text": "Sorry for ignoring this for ~3 years :(  Are you still interested?  If so, can you take a look at the stringi branch? There are still a couple of outstanding test failures, but I'm convinced that building on top of stringi is the way to go."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MzM4", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:13:36Z", "comment_text": "Closing since ICU doesn't appear to support this syntax. @gagolews can you please confirm?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzI2ODg3", "comment_author": "gagolews", "comment_created_date": "2020-11-26T23:43:30Z", "comment_text": "@hadley Unfortunately: YES. No capture group names support in ICU regex engine yet."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4NjA1", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:16:11Z", "comment_text": "@gagolews do you think this would be useful for stringi?\n@jiho I'd prefer to use is.na(x) & x, but mostly sorry for taking so long to look at this."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzI3MDAz", "comment_author": "gagolews", "comment_created_date": "2020-11-26T23:44:53Z", "comment_text": "@hadley: Do you mean stri_subset_* here? Its already there (?)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzMwNjUy", "comment_author": "hadley", "comment_created_date": "2020-11-27T00:36:22Z", "comment_text": "Oops, missed that. I'll add a wrapper!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0ODA3NDUz", "comment_author": "hadley", "comment_created_date": "2020-11-27T16:04:44Z", "comment_text": "Done!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MjQw", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:12:37Z", "comment_text": "Fixed in stringi branch"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MjE4", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:12:29Z", "comment_text": "Now I think it's better to push upstream to stringi. Would you mind doing that?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MTU3", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:11:59Z", "comment_text": "I'm pretty sure this is resolved in stringi branch"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MTE4", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:11:38Z", "comment_text": "Fixed in stringi branch"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MDU5", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:11:10Z", "comment_text": "Fixed in stringi branch"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MDUz", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:11:05Z", "comment_text": "Fixed in stringi branch"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE3ODUx", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:09:05Z", "comment_text": "Done in conversion to use stringi"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MDEz", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:10:38Z", "comment_text": "Sorry for not taking any of your pull requests and for taking so long to respond :(  But the conversion to use stringi as a backend has made stringr considerably better behaved"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE4MjI3", "comment_author": "seanchrismurphy", "comment_created_date": "2020-11-26T22:12:31Z", "comment_text": "It was a worthwhile exercise in learning the innards of stringr nonetheless - I look forward to seeing how it works now."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE3ODQ0", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:09:01Z", "comment_text": "Done in conversion to use stringi"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDY0NzE3ODI4", "comment_author": "hadley", "comment_created_date": "2020-11-26T22:08:55Z", "comment_text": "Done in conversion to use stringi"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMwOTA3OQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:11:22Z", "comment_text": "I'd say str_interp is soft-deprecated in favour of the glue package. We want be making any changes to str_interp() in the future."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMwOTc0MQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:13:24Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMTk3NQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:20:13Z", "comment_text": "Is this now in CRAN stringi?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMjU5OA==", "comment_author": "gagolews", "comment_created_date": "2020-11-14T16:22:07Z", "comment_text": "Should be anytime soon, the new release of stringi got stuck in CRAN/incoming since Friday"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMyNzUwMQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T17:05:47Z", "comment_text": "Great - @yutannihilation can you please include the stringi version requirement in the DESCRIPTION?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQyMzA3Mg==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-14T22:37:15Z", "comment_text": "Thanks. I updated the version requirement to 1.1.6.\nhttps://github.com/gagolews/stringi/releases/tag/v1.1.6."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQzMzk2MQ==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-14T23:24:04Z", "comment_text": "Should I also add stringi to Remotes? Or can I just wait the release of 1.1.6?"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ0NDMyOA==", "comment_author": "hadley", "comment_created_date": "2020-11-15T00:17:28Z", "comment_text": "Add to remotes just so we can test it, and I'll remove before releasing stringr."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ1NzMwOA==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-15T01:33:39Z", "comment_text": "Thanks, I've added Remotes. Travis passes but AppVeyor fails to install stringi by this error. Needs to investigate later.\n\n/bin/sh: c:/Rtools/mingw_32/bin/g++: No such file or directory\n(https://ci.appveyor.com/project/tidyverse/stringr/build/1.0.22#L166)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDYwNDQ1OQ==", "comment_author": "hadley", "comment_created_date": "2020-11-15T14:15:00Z", "comment_text": "Looks good. Can you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDYxMTc2MQ==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-15T14:38:38Z", "comment_text": "Thanks! I've done. I think this is ready to merge now."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTQwNzM0Nw==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-18T01:26:49Z", "comment_text": "Congratulations for the release of stringi 1.1.6! \ud83c\udf89"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NjUxNjA3MQ==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-23T01:46:54Z", "comment_text": "@hadley Hi, do I need to make further improvements on this PR? (Just curious, I know it's a bit too late since the next version is already submitted to CRAN)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NzU1MTY1Nw==", "comment_author": "hadley", "comment_created_date": "2020-11-28T15:05:03Z", "comment_text": "Unless it gets rejected by CRAN, it'll need to go in the next version. Sorry for forgetting about it \ud83d\ude22"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NzU1NzMyOQ==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-28T15:22:19Z", "comment_text": "No problem. Sorry for taking some time to get this PR ready. I will try to do better next time \ud83d\ude09"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMjE4MA==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:20:54Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDM2NTE2MQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T19:11:10Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMzI1MQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:24:09Z", "comment_text": "Thanks!!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMzM0NA==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:24:24Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMzY3Mw==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:25:17Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxMzk3Nw==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:26:15Z", "comment_text": "Can you please move to new home (in trim.R) and document with str_trim()? Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDU0MjYxNw==", "comment_author": "stephlocke", "comment_created_date": "2020-11-15T09:56:14Z", "comment_text": "Sure thing"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTM3MzAwNw==", "comment_author": "hadley", "comment_created_date": "2020-11-17T21:40:35Z", "comment_text": "By \"document with\", I meant use @rdname str_trim so there's only one .Rd file. Sorry for not being more clear!\nCan you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTUzOTU0OQ==", "comment_author": "stephlocke", "comment_created_date": "2020-11-19T18:44:11Z", "comment_text": "Closing this PR - the rebase onto latest master was too much for a Sunday night :)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNDEzMA==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:26:42Z", "comment_text": "Can you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber).\nThanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQzMjIzNQ==", "comment_author": "Shians", "comment_created_date": "2020-11-14T23:15:41Z", "comment_text": "Thanks Hadley, I've updated the NEWS."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ0ODM4Nw==", "comment_author": "hadley", "comment_created_date": "2020-11-15T00:41:25Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNDIwOQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:26:57Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNDI5MQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:27:12Z", "comment_text": "Thanks - someone else spotted it too."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNDUwMA==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:27:50Z", "comment_text": "Thanks! We'll probably eventually deprecated str_interp() in favour of glue"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNDU4OQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:28:10Z", "comment_text": "Thanks - you're the third person to spot this mistake!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNDg3Mg==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:28:53Z", "comment_text": "Doh! Thanks for fixing this"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDExMTQ4MQ==", "comment_author": "hadley", "comment_created_date": "2020-11-14T01:05:11Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDMxNTI4MA==", "comment_author": "hadley", "comment_created_date": "2020-11-14T16:30:03Z", "comment_text": "I think this is a good idea, but the docs are confusing me. Does this change the current default behaviour? (It probably should since you're usually padding to make strings aligned for output)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQyNjg1NQ==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-14T22:51:38Z", "comment_text": "Does this change the current default behaviour?\n\nNo, but I think you don't need to be afraid.\nThe default behaviour already had been changed on the stringi's side after version 0.5-2, which pads strings based on the total character widths so that strings are properly aligned for output. Users who want the old behaviour can still choose the old behaviour by use_length = TRUE (\"length\" means \"the number of characters\" here, which may be a bit confusing...).\nDoes my explanation make sense? I'm sorry maybe my English is not good enough to document this nicely :("}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ0NTM4Mg==", "comment_author": "hadley", "comment_created_date": "2020-11-15T00:23:40Z", "comment_text": "In that case, this doesn't seem super useful to me given that the point of str_pad() is to align things visually."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ1MDUxNQ==", "comment_author": "yutannihilation", "comment_created_date": "2020-11-15T00:54:11Z", "comment_text": "Agreed. This is not super useful. Yet, it seems some people like #188 need the behaviour consistent with the default of base nchar() (I don't know the exact use cases, though).\nMaybe you can close this PR for now and reopen if needed  :)"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDQ1NzM0NA==", "comment_author": "hadley", "comment_created_date": "2020-11-15T01:33:51Z", "comment_text": "Yeah, let me dig into that issue a bit more. Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NDExMTQzMA==", "comment_author": "hadley", "comment_created_date": "2020-11-14T01:04:48Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTM3Mjc4NQ==", "comment_author": "hadley", "comment_created_date": "2020-11-17T21:39:37Z", "comment_text": "Can you please add a bullet to NEWS? It should briefly describe the change (starting with name of the function), and crediting yourself with (@yourname, #issuenumber)."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTU3NTgzNw==", "comment_author": "ClaytonJY", "comment_created_date": "2020-11-20T02:33:01Z", "comment_text": "Done! Thanks for adding the other one for me @hadley."}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTY5MzI0NA==", "comment_author": "hadley", "comment_created_date": "2020-11-20T13:20:21Z", "comment_text": "Thanks!"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTU0MDQ5MQ==", "comment_author": "stephlocke", "comment_created_date": "2020-11-19T18:56:19Z", "comment_text": "@hadley - new PR with requested stuff from #177"}, {"comment_id": "MDEyOklzc3VlQ29tbWVudDM0NTc5ODUxNA==", "comment_author": "hadley", "comment_created_date": "2020-11-20T19:16:12Z", "comment_text": "Thanks!"}]}